

================================================================
== Vivado HLS Report for 'splitter'
================================================================
* Date:           Fri Nov  9 23:09:24 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        memcachedPipeline_prj
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690tffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.66|     3.651|        0.83|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.65>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.ap_fifo.i256P(i256* @hashTable2splitter_V, i32 1) nounwind"   --->   Operation 4 'nbreadreq' 'tmp' <Predicate = true> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 256> <Depth = 2> <FIFO>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "br i1 %tmp, label %0, label %splitter.exit" [sources/splitter.cpp:38]   --->   Operation 5 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (2.39ns)   --->   "%tmp92 = call i256 @_ssdm_op_Read.ap_fifo.volatile.i256P(i256* @hashTable2splitter_V) nounwind"   --->   Operation 6 'read' 'tmp92' <Predicate = (tmp)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 256> <Depth = 2> <FIFO>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp_SOP_V = call i1 @_ssdm_op_BitSelect.i1.i256.i32(i256 %tmp92, i32 124)" [sources/splitter.cpp:40]   --->   Operation 7 'bitselect' 'tmp_SOP_V' <Predicate = (tmp)> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_Result_i = call i32 @_ssdm_op_PartSelect.i32.i256.i32.i32(i256 %tmp92, i32 8, i32 39) nounwind" [sources/splitter.cpp:42]   --->   Operation 8 'partselect' 'p_Result_i' <Predicate = (tmp & tmp_SOP_V)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.26ns)   --->   "%not_i = icmp ult i32 %p_Result_i, 2049" [sources/splitter.cpp:42]   --->   Operation 9 'icmp' 'not_i' <Predicate = (tmp & tmp_SOP_V)> <Delay = 1.26> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.26> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.85ns)   --->   "br label %._crit_edge2.i" [sources/splitter.cpp:46]   --->   Operation 10 'br' <Predicate = (tmp & tmp_SOP_V)> <Delay = 0.85>

State 2 <SV = 1> <Delay = 2.18>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%is_validFlag_load = load i1* @is_validFlag, align 1" [sources/splitter.cpp:47]   --->   Operation 11 'load' 'is_validFlag_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%dramOrFlash_V_1_load = load i1* @dramOrFlash_V_1, align 1" [sources/splitter.cpp:48]   --->   Operation 12 'load' 'dramOrFlash_V_1_load' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.85ns)   --->   "br i1 %tmp_SOP_V, label %1, label %._crit_edge2.i" [sources/splitter.cpp:40]   --->   Operation 13 'br' <Predicate = (tmp)> <Delay = 0.85>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "store i1 %not_i, i1* @dramOrFlash_V_1, align 1" [sources/splitter.cpp:43]   --->   Operation 14 'store' <Predicate = (tmp & tmp_SOP_V)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%is_validFlag_flag_i = phi i1 [ true, %1 ], [ false, %0 ]"   --->   Operation 15 'phi' 'is_validFlag_flag_i' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%is_validFlag_loc_i = phi i1 [ true, %1 ], [ %is_validFlag_load, %0 ]" [sources/splitter.cpp:47]   --->   Operation 16 'phi' 'is_validFlag_loc_i' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%dramOrFlash_V_1_loc_s = phi i1 [ %not_i, %1 ], [ %dramOrFlash_V_1_load, %0 ]" [sources/splitter.cpp:42]   --->   Operation 17 'phi' 'dramOrFlash_V_1_loc_s' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.85ns)   --->   "br i1 %is_validFlag_loc_i, label %2, label %._crit_edge3.i" [sources/splitter.cpp:47]   --->   Operation 18 'br' <Predicate = (tmp)> <Delay = 0.85>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %dramOrFlash_V_1_loc_s, label %4, label %3" [sources/splitter.cpp:48]   --->   Operation 19 'br' <Predicate = (tmp & is_validFlag_loc_i)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i256.i32(i256 %tmp92, i32 127)" [sources/splitter.cpp:52]   --->   Operation 20 'bitselect' 'tmp_2' <Predicate = (tmp & is_validFlag_loc_i)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.48ns)   --->   "%p_is_validFlag_flag_i = or i1 %tmp_2, %is_validFlag_flag_i" [sources/splitter.cpp:52]   --->   Operation 21 'or' 'p_is_validFlag_flag_i' <Predicate = (tmp & is_validFlag_loc_i)> <Delay = 0.48> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.48ns)   --->   "%not_din_EOP_V_assign = xor i1 %tmp_2, true" [sources/splitter.cpp:52]   --->   Operation 22 'xor' 'not_din_EOP_V_assign' <Predicate = (tmp & is_validFlag_loc_i)> <Delay = 0.48> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.85ns)   --->   "br label %._crit_edge3.i" [sources/splitter.cpp:54]   --->   Operation 23 'br' <Predicate = (tmp & is_validFlag_loc_i)> <Delay = 0.85>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%is_validFlag_flag_2_s = phi i1 [ %p_is_validFlag_flag_i, %._crit_edge5.i ], [ %is_validFlag_flag_i, %._crit_edge2.i ]" [sources/splitter.cpp:52]   --->   Operation 24 'phi' 'is_validFlag_flag_2_s' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%is_validFlag_new_2_i = phi i1 [ %not_din_EOP_V_assign, %._crit_edge5.i ], [ true, %._crit_edge2.i ]" [sources/splitter.cpp:52]   --->   Operation 25 'phi' 'is_validFlag_new_2_i' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %is_validFlag_flag_2_s, label %mergeST.i, label %._crit_edge3.new.i" [sources/splitter.cpp:52]   --->   Operation 26 'br' <Predicate = (tmp)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "store i1 %is_validFlag_new_2_i, i1* @is_validFlag, align 1" [sources/splitter.cpp:41]   --->   Operation 27 'store' <Predicate = (tmp & is_validFlag_flag_2_s)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.39>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i256* @hashTable2splitter_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i256* @splitter2valueStoreD_1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i256* @splitter2valueStoreF_1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 30 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str139) nounwind" [sources/splitter.cpp:33]   --->   Operation 31 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i256P(i256* @splitter2valueStoreF_1, i256 %tmp92) nounwind"   --->   Operation 32 'write' <Predicate = (tmp & is_validFlag_loc_i & !dramOrFlash_V_1_loc_s)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 256> <Depth = 2> <FIFO>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "br label %._crit_edge5.i" [sources/splitter.cpp:49]   --->   Operation 33 'br' <Predicate = (tmp & is_validFlag_loc_i & !dramOrFlash_V_1_loc_s)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i256P(i256* @splitter2valueStoreD_1, i256 %tmp92) nounwind"   --->   Operation 34 'write' <Predicate = (tmp & is_validFlag_loc_i & dramOrFlash_V_1_loc_s)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 256> <Depth = 2> <FIFO>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "br label %._crit_edge5.i"   --->   Operation 35 'br' <Predicate = (tmp & is_validFlag_loc_i & dramOrFlash_V_1_loc_s)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "br label %._crit_edge3.new.i"   --->   Operation 36 'br' <Predicate = (tmp & is_validFlag_flag_2_s)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "br label %splitter.exit" [sources/splitter.cpp:55]   --->   Operation 37 'br' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 38 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.66ns, clock uncertainty: 0.832ns.

 <State 1>: 3.65ns
The critical path consists of the following:
	fifo read on port 'hashTable2splitter_V' [13]  (2.39 ns)
	'icmp' operation ('not_i', sources/splitter.cpp:42) [20]  (1.26 ns)

 <State 2>: 2.19ns
The critical path consists of the following:
	'load' operation ('is_validFlag_load', sources/splitter.cpp:47) on static variable 'is_validFlag' [15]  (0 ns)
	multiplexor before 'phi' operation ('is_validFlag_flag_i') [24]  (0.85 ns)
	'phi' operation ('is_validFlag_flag_i') [24]  (0 ns)
	'or' operation ('p_is_validFlag_flag_i', sources/splitter.cpp:52) [38]  (0.485 ns)
	multiplexor before 'phi' operation ('is_validFlag_flag_2_s', sources/splitter.cpp:52) with incoming values : ('p_is_validFlag_flag_i', sources/splitter.cpp:52) [42]  (0.85 ns)
	'phi' operation ('is_validFlag_flag_2_s', sources/splitter.cpp:52) with incoming values : ('p_is_validFlag_flag_i', sources/splitter.cpp:52) [42]  (0 ns)

 <State 3>: 2.39ns
The critical path consists of the following:
	fifo write on port 'splitter2valueStoreF_1' [31]  (2.39 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
