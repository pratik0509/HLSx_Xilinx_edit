

================================================================
== Vivado HLS Report for 'receive'
================================================================
* Date:           Tue Nov 13 22:51:26 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        memcachedPipeline_prj
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690tffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.66|     4.574|        0.83|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    1|    1|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.57>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%getState_load = load i1* @getState, align 1" [sources/valueStore/valueStore.cpp:489]   --->   Operation 3 'load' 'getState_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%getValueLength_V_loa = load i12* @getValueLength_V, align 2" [sources/valueStore/valueStore.cpp:505]   --->   Operation 4 'load' 'getValueLength_V_loa' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%getCounter_load = load i8* @getCounter, align 1" [sources/valueStore/valueStore.cpp:497]   --->   Operation 5 'load' 'getCounter_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "br i1 %getState_load, label %._crit_edge5.i, label %0" [sources/valueStore/valueStore.cpp:489]   --->   Operation 6 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.ap_fifo.i12P(i12* @disp2rec_V_V, i32 1)" [sources/valueStore/valueStore.cpp:492]   --->   Operation 7 'nbreadreq' 'tmp' <Predicate = (!getState_load)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "br i1 %tmp, label %1, label %._crit_edge3.i" [sources/valueStore/valueStore.cpp:492]   --->   Operation 8 'br' <Predicate = (!getState_load)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tmp_132 = call i1 @_ssdm_op_NbReadReq.axis.i512P(i512* %memRdData_V_V, i32 1)" [sources/valueStore/valueStore.cpp:492]   --->   Operation 9 'nbreadreq' 'tmp_132' <Predicate = (!getState_load & tmp)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 10 [1/1] (2.39ns)   --->   "%tmp_V_16 = call i12 @_ssdm_op_Read.ap_fifo.volatile.i12P(i12* @disp2rec_V_V)" [sources/valueStore/valueStore.cpp:493]   --->   Operation 10 'read' 'tmp_V_16' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_V_19 = call i512 @_ssdm_op_Read.axis.volatile.i512P(i512* %memRdData_V_V)" [sources/valueStore/valueStore.cpp:494]   --->   Operation 11 'read' 'tmp_V_19' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 12 [1/1] (0.85ns)   --->   "store i512 %tmp_V_19, i512* @memInputWord_V, align 64" [sources/valueStore/valueStore.cpp:494]   --->   Operation 12 'store' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 0.85>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_V_18 = trunc i512 %tmp_V_19 to i64" [sources/valueStore/valueStore.cpp:495]   --->   Operation 13 'trunc' 'tmp_V_18' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.33ns)   --->   "%tmp_99_i = add i12 -8, %tmp_V_16" [sources/valueStore/valueStore.cpp:496]   --->   Operation 14 'add' 'tmp_99_i' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.85ns)   --->   "store i12 %tmp_99_i, i12* @getValueLength_V, align 2" [sources/valueStore/valueStore.cpp:496]   --->   Operation 15 'store' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 0.85>
ST_1 : Operation 16 [1/1] (1.35ns)   --->   "%tmp_100_i = add i8 1, %getCounter_load" [sources/valueStore/valueStore.cpp:497]   --->   Operation 16 'add' 'tmp_100_i' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.85ns)   --->   "store i8 %tmp_100_i, i8* @getCounter, align 1" [sources/valueStore/valueStore.cpp:497]   --->   Operation 17 'store' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 0.85>
ST_1 : Operation 18 [1/1] (0.85ns)   --->   "store i1 true, i1* @getState, align 1" [sources/valueStore/valueStore.cpp:498]   --->   Operation 18 'store' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 0.85>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_113 = trunc i8 %getCounter_load to i4" [sources/valueStore/valueStore.cpp:497]   --->   Operation 19 'trunc' 'tmp_113' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%Lo_assign = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %getCounter_load, i6 0)" [sources/valueStore/valueStore.cpp:504]   --->   Operation 20 'bitconcatenate' 'Lo_assign' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%Hi_assign = or i14 %Lo_assign, 63" [sources/valueStore/valueStore.cpp:504]   --->   Operation 21 'or' 'Hi_assign' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_Val2_s = load i512* @memInputWord_V, align 64" [sources/valueStore/valueStore.cpp:504]   --->   Operation 22 'load' 'p_Val2_s' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.10ns)   --->   "%tmp_114 = icmp ugt i14 %Lo_assign, %Hi_assign" [sources/valueStore/valueStore.cpp:504]   --->   Operation 23 'icmp' 'tmp_114' <Predicate = (getState_load)> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_115 = call i10 @_ssdm_op_BitConcatenate.i10.i4.i6(i4 %tmp_113, i6 0)" [sources/valueStore/valueStore.cpp:504]   --->   Operation 24 'bitconcatenate' 'tmp_115' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_116 = trunc i14 %Hi_assign to i10" [sources/valueStore/valueStore.cpp:504]   --->   Operation 25 'trunc' 'tmp_116' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node tmp_127)   --->   "%tmp_117 = call i512 @llvm.part.select.i512(i512 %p_Val2_s, i32 511, i32 0)" [sources/valueStore/valueStore.cpp:504]   --->   Operation 26 'partselect' 'tmp_117' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (1.34ns)   --->   "%tmp_118 = sub i10 %tmp_115, %tmp_116" [sources/valueStore/valueStore.cpp:504]   --->   Operation 27 'sub' 'tmp_118' <Predicate = (getState_load)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (1.34ns)   --->   "%tmp_119 = sub i10 511, %tmp_115" [sources/valueStore/valueStore.cpp:504]   --->   Operation 28 'sub' 'tmp_119' <Predicate = (getState_load)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (1.34ns)   --->   "%tmp_120 = sub i10 %tmp_116, %tmp_115" [sources/valueStore/valueStore.cpp:504]   --->   Operation 29 'sub' 'tmp_120' <Predicate = (getState_load)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node tmp_124)   --->   "%tmp_121 = select i1 %tmp_114, i10 %tmp_118, i10 %tmp_120" [sources/valueStore/valueStore.cpp:504]   --->   Operation 30 'select' 'tmp_121' <Predicate = (getState_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node tmp_127)   --->   "%tmp_122 = select i1 %tmp_114, i512 %tmp_117, i512 %p_Val2_s" [sources/valueStore/valueStore.cpp:504]   --->   Operation 31 'select' 'tmp_122' <Predicate = (getState_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node tmp_127)   --->   "%tmp_123 = select i1 %tmp_114, i10 %tmp_119, i10 %tmp_115" [sources/valueStore/valueStore.cpp:504]   --->   Operation 32 'select' 'tmp_123' <Predicate = (getState_load)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.34ns) (out node of the LUT)   --->   "%tmp_124 = sub i10 511, %tmp_121" [sources/valueStore/valueStore.cpp:504]   --->   Operation 33 'sub' 'tmp_124' <Predicate = (getState_load)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node tmp_127)   --->   "%tmp_125 = zext i10 %tmp_123 to i512" [sources/valueStore/valueStore.cpp:504]   --->   Operation 34 'zext' 'tmp_125' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (2.77ns) (out node of the LUT)   --->   "%tmp_127 = lshr i512 %tmp_122, %tmp_125" [sources/valueStore/valueStore.cpp:504]   --->   Operation 35 'lshr' 'tmp_127' <Predicate = (getState_load)> <Delay = 2.77> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_131 = call i9 @_ssdm_op_PartSelect.i9.i12.i32.i32(i12 %getValueLength_V_loa, i32 3, i32 11)" [sources/valueStore/valueStore.cpp:505]   --->   Operation 36 'partselect' 'tmp_131' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.90ns)   --->   "%icmp = icmp ne i9 %tmp_131, 0" [sources/valueStore/valueStore.cpp:505]   --->   Operation 37 'icmp' 'icmp' <Predicate = (getState_load)> <Delay = 0.90> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (1.33ns)   --->   "%tmp_95_i = add i12 %getValueLength_V_loa, -8" [sources/valueStore/valueStore.cpp:505]   --->   Operation 38 'add' 'tmp_95_i' <Predicate = (getState_load)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.60ns)   --->   "%storemerge_i = select i1 %icmp, i12 %tmp_95_i, i12 0" [sources/valueStore/valueStore.cpp:505]   --->   Operation 39 'select' 'storemerge_i' <Predicate = (getState_load)> <Delay = 0.60> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.85ns)   --->   "store i12 %storemerge_i, i12* @getValueLength_V, align 2" [sources/valueStore/valueStore.cpp:505]   --->   Operation 40 'store' <Predicate = (getState_load)> <Delay = 0.85>
ST_1 : Operation 41 [1/1] (1.02ns)   --->   "%tmp_96_i = icmp eq i12 %storemerge_i, 0" [sources/valueStore/valueStore.cpp:506]   --->   Operation 41 'icmp' 'tmp_96_i' <Predicate = (getState_load)> <Delay = 1.02> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "br i1 %tmp_96_i, label %3, label %4" [sources/valueStore/valueStore.cpp:506]   --->   Operation 42 'br' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.86ns)   --->   "%tmp_97_i = icmp eq i8 %getCounter_load, 7" [sources/valueStore/valueStore.cpp:511]   --->   Operation 43 'icmp' 'tmp_97_i' <Predicate = (getState_load & !tmp_96_i)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %tmp_97_i, label %5, label %6" [sources/valueStore/valueStore.cpp:511]   --->   Operation 44 'br' <Predicate = (getState_load & !tmp_96_i)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (1.35ns)   --->   "%tmp_98_i = add i8 %getCounter_load, 1" [sources/valueStore/valueStore.cpp:516]   --->   Operation 45 'add' 'tmp_98_i' <Predicate = (getState_load & !tmp_96_i & !tmp_97_i)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.85ns)   --->   "br label %7"   --->   Operation 46 'br' <Predicate = (getState_load & !tmp_96_i & !tmp_97_i)> <Delay = 0.85>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_V_15 = call i512 @_ssdm_op_Read.axis.volatile.i512P(i512* %memRdData_V_V)" [sources/valueStore/valueStore.cpp:512]   --->   Operation 47 'read' 'tmp_V_15' <Predicate = (getState_load & !tmp_96_i & tmp_97_i)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 48 [1/1] (0.85ns)   --->   "store i512 %tmp_V_15, i512* @memInputWord_V, align 64" [sources/valueStore/valueStore.cpp:512]   --->   Operation 48 'store' <Predicate = (getState_load & !tmp_96_i & tmp_97_i)> <Delay = 0.85>
ST_1 : Operation 49 [1/1] (0.85ns)   --->   "br label %7" [sources/valueStore/valueStore.cpp:514]   --->   Operation 49 'br' <Predicate = (getState_load & !tmp_96_i & tmp_97_i)> <Delay = 0.85>
ST_1 : Operation 50 [1/1] (0.85ns)   --->   "store i1 false, i1* @getState, align 1" [sources/valueStore/valueStore.cpp:508]   --->   Operation 50 'store' <Predicate = (getState_load & tmp_96_i)> <Delay = 0.85>
ST_1 : Operation 51 [1/1] (0.85ns)   --->   "br label %7" [sources/valueStore/valueStore.cpp:510]   --->   Operation 51 'br' <Predicate = (getState_load & tmp_96_i)> <Delay = 0.85>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%storemerge11_i = phi i8 [ 0, %3 ], [ %tmp_98_i, %6 ], [ 0, %5 ]" [sources/valueStore/valueStore.cpp:516]   --->   Operation 52 'phi' 'storemerge11_i' <Predicate = (getState_load)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.85ns)   --->   "store i8 %storemerge11_i, i8* @getCounter, align 1" [sources/valueStore/valueStore.cpp:509]   --->   Operation 53 'store' <Predicate = (getState_load)> <Delay = 0.85>

State 2 <SV = 1> <Delay = 4.11>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i12* @disp2rec_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1161, i32 0, i32 0, [1 x i8]* @p_str1162, [1 x i8]* @p_str1163, [1 x i8]* @p_str1164, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1165, [1 x i8]* @p_str1166)"   --->   Operation 54 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* @filterPopGet_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1154, i32 0, i32 0, [1 x i8]* @p_str1155, [1 x i8]* @p_str1156, [1 x i8]* @p_str1157, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1158, [1 x i8]* @p_str1159)"   --->   Operation 55 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* @getPath2remux_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1133, i32 0, i32 0, [1 x i8]* @p_str1134, [1 x i8]* @p_str1135, [1 x i8]* @p_str1136, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1137, [1 x i8]* @p_str1138)"   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512* %memRdData_V_V, [5 x i8]* @p_str324, i32 1, i32 1, [5 x i8]* @p_str425, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122, [1 x i8]* @p_str122, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122) nounwind"   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 2, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [sources/valueStore/valueStore.cpp:482]   --->   Operation 58 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %tmp_132, label %2, label %._crit_edge3.i" [sources/valueStore/valueStore.cpp:492]   --->   Operation 59 'br' <Predicate = (!getState_load & tmp)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* @getPath2remux_V_V, i64 %tmp_V_18)" [sources/valueStore/valueStore.cpp:495]   --->   Operation 60 'write' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "br label %._crit_edge3.i" [sources/valueStore/valueStore.cpp:499]   --->   Operation 61 'br' <Predicate = (!getState_load & tmp & tmp_132)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "br label %receive.exit" [sources/valueStore/valueStore.cpp:500]   --->   Operation 62 'br' <Predicate = (!getState_load)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp_126 = zext i10 %tmp_124 to i512" [sources/valueStore/valueStore.cpp:504]   --->   Operation 63 'zext' 'tmp_126' <Predicate = (getState_load)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp_128 = lshr i512 -1, %tmp_126" [sources/valueStore/valueStore.cpp:504]   --->   Operation 64 'lshr' 'tmp_128' <Predicate = (getState_load)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (1.72ns) (out node of the LUT)   --->   "%p_Result_s = and i512 %tmp_127, %tmp_128" [sources/valueStore/valueStore.cpp:504]   --->   Operation 65 'and' 'p_Result_s' <Predicate = (getState_load)> <Delay = 1.72> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_V = trunc i512 %p_Result_s to i64" [sources/valueStore/valueStore.cpp:504]   --->   Operation 66 'trunc' 'tmp_V' <Predicate = (getState_load)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* @getPath2remux_V_V, i64 %tmp_V)" [sources/valueStore/valueStore.cpp:504]   --->   Operation 67 'write' <Predicate = (getState_load)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_2 : Operation 68 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i1P(i1* @filterPopGet_V_V, i1 true)" [sources/valueStore/valueStore.cpp:507]   --->   Operation 68 'write' <Predicate = (getState_load & tmp_96_i)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 1> <Depth = 2> <FIFO>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "br label %receive.exit" [sources/valueStore/valueStore.cpp:517]   --->   Operation 69 'br' <Predicate = (getState_load)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 70 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.66ns, clock uncertainty: 0.832ns.

 <State 1>: 4.57ns
The critical path consists of the following:
	fifo read on port 'disp2rec_V_V' (sources/valueStore/valueStore.cpp:493) [25]  (2.39 ns)
	'add' operation ('tmp_99_i', sources/valueStore/valueStore.cpp:496) [30]  (1.33 ns)
	'store' operation (sources/valueStore/valueStore.cpp:496) of variable 'tmp_99_i', sources/valueStore/valueStore.cpp:496 on static variable 'getValueLength_V' [31]  (0.85 ns)

 <State 2>: 4.11ns
The critical path consists of the following:
	'lshr' operation ('tmp_128', sources/valueStore/valueStore.cpp:504) [57]  (0 ns)
	'and' operation ('__Result__', sources/valueStore/valueStore.cpp:504) [58]  (1.72 ns)
	fifo write on port 'getPath2remux_V_V' (sources/valueStore/valueStore.cpp:504) [60]  (2.39 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
