

================================================================
== Vivado HLS Report for 'setPath'
================================================================
* Date:           Tue Nov 13 22:51:21 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        memcachedPipeline_prj
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690tffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.66|     5.598|        0.83|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.98>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%setState_load = load i3* @setState, align 1" [sources/valueStore/valueStore.cpp:267]   --->   Operation 4 'load' 'setState_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%counter_load = load i8* @counter, align 1" [sources/valueStore/valueStore.cpp:291]   --->   Operation 5 'load' 'counter_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.00ns)   --->   "switch i3 %setState_load, label %._crit_edge2.i [
    i3 0, label %0
    i3 1, label %3
    i3 3, label %4
    i3 -4, label %5
    i3 2, label %6
    i3 -3, label %7
    i3 -2, label %8
  ]" [sources/valueStore/valueStore.cpp:267]   --->   Operation 6 'switch' <Predicate = true> <Delay = 1.00>
ST_1 : Operation 7 [1/1] (0.92ns)   --->   "store i8 0, i8* @counter, align 1" [sources/valueStore/valueStore.cpp:349]   --->   Operation 7 'store' <Predicate = (setState_load == 6)> <Delay = 0.92>
ST_1 : Operation 8 [1/1] (1.07ns)   --->   "store i3 0, i3* @setState, align 1" [sources/valueStore/valueStore.cpp:352]   --->   Operation 8 'store' <Predicate = (setState_load == 6)> <Delay = 1.07>
ST_1 : Operation 9 [1/1] (1.00ns)   --->   "br label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:353]   --->   Operation 9 'br' <Predicate = (setState_load == 6)> <Delay = 1.00>
ST_1 : Operation 10 [1/1] (0.92ns)   --->   "store i8 0, i8* @counter, align 1" [sources/valueStore/valueStore.cpp:342]   --->   Operation 10 'store' <Predicate = (setState_load == 5)> <Delay = 0.92>
ST_1 : Operation 11 [1/1] (1.07ns)   --->   "store i3 2, i3* @setState, align 1" [sources/valueStore/valueStore.cpp:344]   --->   Operation 11 'store' <Predicate = (setState_load == 5)> <Delay = 1.07>
ST_1 : Operation 12 [1/1] (1.00ns)   --->   "br label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:345]   --->   Operation 12 'br' <Predicate = (setState_load == 5)> <Delay = 1.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_2 = call i1 @_ssdm_op_NbReadReq.ap_fifo.i66P(i66* @demux2setPathValue_V, i32 1)"   --->   Operation 13 'nbreadreq' 'tmp_2' <Predicate = (setState_load == 2)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 14 [1/1] (1.00ns)   --->   "br i1 %tmp_2, label %_ifconv1, label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:326]   --->   Operation 14 'br' <Predicate = (setState_load == 2)> <Delay = 1.00>
ST_1 : Operation 15 [1/1] (2.39ns)   --->   "%tmp_543 = call i66 @_ssdm_op_Read.ap_fifo.volatile.i66P(i66* @demux2setPathValue_V)"   --->   Operation 15 'read' 'tmp_543' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %tmp_543, i32 65)" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328]   --->   Operation 16 'bitselect' 'tmp_32' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_33 = trunc i8 %counter_load to i4" [sources/valueStore/valueStore.cpp:291]   --->   Operation 17 'trunc' 'tmp_33' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%Lo_assign_1 = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %counter_load, i6 0)" [sources/valueStore/valueStore.cpp:329]   --->   Operation 18 'bitconcatenate' 'Lo_assign_1' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%Hi_assign_1 = or i14 %Lo_assign_1, 63" [sources/valueStore/valueStore.cpp:329]   --->   Operation 19 'or' 'Hi_assign_1' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.10ns)   --->   "%tmp_34 = icmp ugt i14 %Lo_assign_1, %Hi_assign_1" [sources/valueStore/valueStore.cpp:329]   --->   Operation 20 'icmp' 'tmp_34' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_37 = trunc i14 %Hi_assign_1 to i10" [sources/valueStore/valueStore.cpp:329]   --->   Operation 21 'trunc' 'tmp_37' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.86ns)   --->   "%tmp_13_i = icmp eq i8 %counter_load, 7" [sources/valueStore/valueStore.cpp:332]   --->   Operation 22 'icmp' 'tmp_13_i' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node storemerge3_i)   --->   "%storemerge_i = select i1 %tmp_32, i3 -2, i3 -3" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328]   --->   Operation 23 'select' 'storemerge_i' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node storemerge3_i)   --->   "%tmp_5 = or i1 %tmp_32, %tmp_13_i" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328]   --->   Operation 24 'or' 'tmp_5' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.51ns) (out node of the LUT)   --->   "%storemerge3_i = select i1 %tmp_5, i3 %storemerge_i, i3 2" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328]   --->   Operation 25 'select' 'storemerge3_i' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (1.07ns)   --->   "store i3 %storemerge3_i, i3* @setState, align 1" [sources/valueStore/valueStore.cpp:331]   --->   Operation 26 'store' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 1.07>
ST_1 : Operation 27 [1/1] (1.35ns)   --->   "%tmp_15_i = add i8 %counter_load, 1" [sources/valueStore/valueStore.cpp:336]   --->   Operation 27 'add' 'tmp_15_i' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.92ns)   --->   "store i8 %tmp_15_i, i8* @counter, align 1" [sources/valueStore/valueStore.cpp:336]   --->   Operation 28 'store' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.92>
ST_1 : Operation 29 [1/1] (0.92ns)   --->   "store i8 0, i8* @counter, align 1" [sources/valueStore/valueStore.cpp:316]   --->   Operation 29 'store' <Predicate = (setState_load == 4)> <Delay = 0.92>
ST_1 : Operation 30 [1/1] (1.07ns)   --->   "store i3 2, i3* @setState, align 1" [sources/valueStore/valueStore.cpp:321]   --->   Operation 30 'store' <Predicate = (setState_load == 4)> <Delay = 1.07>
ST_1 : Operation 31 [1/1] (1.00ns)   --->   "br label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:322]   --->   Operation 31 'br' <Predicate = (setState_load == 4)> <Delay = 1.00>
ST_1 : Operation 32 [1/1] (0.92ns)   --->   "store i8 0, i8* @counter, align 1" [sources/valueStore/valueStore.cpp:305]   --->   Operation 32 'store' <Predicate = (setState_load == 3)> <Delay = 0.92>
ST_1 : Operation 33 [1/1] (1.07ns)   --->   "store i3 0, i3* @setState, align 1" [sources/valueStore/valueStore.cpp:311]   --->   Operation 33 'store' <Predicate = (setState_load == 3)> <Delay = 1.07>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "br label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:312]   --->   Operation 34 'br' <Predicate = (setState_load == 3)> <Delay = 1.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_NbReadReq.ap_fifo.i66P(i66* @demux2setPathValue_V, i32 1)"   --->   Operation 35 'nbreadreq' 'tmp_1' <Predicate = (setState_load == 1)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 36 [1/1] (1.00ns)   --->   "br i1 %tmp_1, label %_ifconv, label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:289]   --->   Operation 36 'br' <Predicate = (setState_load == 1)> <Delay = 1.00>
ST_1 : Operation 37 [1/1] (1.35ns)   --->   "%tmp_i = add i8 %counter_load, 1" [sources/valueStore/valueStore.cpp:291]   --->   Operation 37 'add' 'tmp_i' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.92ns)   --->   "store i8 %tmp_i, i8* @counter, align 1" [sources/valueStore/valueStore.cpp:291]   --->   Operation 38 'store' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.92>
ST_1 : Operation 39 [1/1] (2.39ns)   --->   "%tmp_29 = call i66 @_ssdm_op_Read.ap_fifo.volatile.i66P(i66* @demux2setPathValue_V)"   --->   Operation 39 'read' 'tmp_29' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %tmp_29, i32 65)" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:292]   --->   Operation 40 'bitselect' 'tmp_8' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_9 = trunc i8 %tmp_i to i4" [sources/valueStore/valueStore.cpp:291]   --->   Operation 41 'trunc' 'tmp_9' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%Lo_assign = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %tmp_i, i6 0)" [sources/valueStore/valueStore.cpp:293]   --->   Operation 42 'bitconcatenate' 'Lo_assign' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%Hi_assign = or i14 %Lo_assign, 63" [sources/valueStore/valueStore.cpp:293]   --->   Operation 43 'or' 'Hi_assign' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.10ns)   --->   "%tmp_10 = icmp ugt i14 %Lo_assign, %Hi_assign" [sources/valueStore/valueStore.cpp:293]   --->   Operation 44 'icmp' 'tmp_10' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 1.10> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_12 = trunc i14 %Hi_assign to i10" [sources/valueStore/valueStore.cpp:293]   --->   Operation 45 'trunc' 'tmp_12' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.86ns)   --->   "%tmp_12_i = icmp eq i8 %tmp_i, 7" [sources/valueStore/valueStore.cpp:296]   --->   Operation 46 'icmp' 'tmp_12_i' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node storemerge2_i)   --->   "%storemerge1_i = select i1 %tmp_8, i3 3, i3 -4" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:292]   --->   Operation 47 'select' 'storemerge1_i' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node storemerge2_i)   --->   "%tmp_4 = or i1 %tmp_8, %tmp_12_i" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:292]   --->   Operation 48 'or' 'tmp_4' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.51ns) (out node of the LUT)   --->   "%storemerge2_i = select i1 %tmp_4, i3 %storemerge1_i, i3 1" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:292]   --->   Operation 49 'select' 'storemerge2_i' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.51> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (1.07ns)   --->   "store i3 %storemerge2_i, i3* @setState, align 1" [sources/valueStore/valueStore.cpp:295]   --->   Operation 50 'store' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 1.07>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.ap_fifo.i45P(i45* @demux2setPathMetadat_1, i32 1)"   --->   Operation 51 'nbreadreq' 'tmp' <Predicate = (setState_load == 0)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 52 [1/1] (1.00ns)   --->   "br i1 %tmp, label %1, label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:272]   --->   Operation 52 'br' <Predicate = (setState_load == 0)> <Delay = 1.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_3 = call i1 @_ssdm_op_NbReadReq.ap_fifo.i66P(i66* @demux2setPathValue_V, i32 1)"   --->   Operation 53 'nbreadreq' 'tmp_3' <Predicate = (setState_load == 0 & tmp)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 54 [1/1] (1.00ns)   --->   "br i1 %tmp_3, label %._crit_edge5.i, label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:272]   --->   Operation 54 'br' <Predicate = (setState_load == 0 & tmp)> <Delay = 1.00>
ST_1 : Operation 55 [1/1] (2.39ns)   --->   "%tmp34 = call i45 @_ssdm_op_Read.ap_fifo.volatile.i45P(i45* @demux2setPathMetadat_1)"   --->   Operation 55 'read' 'tmp34' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_55 = trunc i45 %tmp34 to i32" [sources/valueStore/../globals.h:143->sources/valueStore/valueStore.cpp:274]   --->   Operation 56 'trunc' 'tmp_55' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_length_V_load_ne = call i13 @_ssdm_op_PartSelect.i13.i45.i32.i32(i45 %tmp34, i32 32, i32 44)" [sources/valueStore/../globals.h:143->sources/valueStore/valueStore.cpp:274]   --->   Operation 57 'partselect' 'tmp_length_V_load_ne' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_6 = call i7 @_ssdm_op_PartSelect.i7.i45.i32.i32(i45 %tmp34, i32 38, i32 44)" [sources/valueStore/valueStore.cpp:275]   --->   Operation 58 'partselect' 'tmp_6' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%op2_assign = call i13 @_ssdm_op_BitConcatenate.i13.i7.i6(i7 %tmp_6, i6 0)" [sources/valueStore/valueStore.cpp:276]   --->   Operation 59 'bitconcatenate' 'op2_assign' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (1.06ns)   --->   "%tmp_11_i = icmp ugt i13 %tmp_length_V_load_ne, %op2_assign" [sources/valueStore/valueStore.cpp:276]   --->   Operation 60 'icmp' 'tmp_11_i' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 1.06> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (2.39ns)   --->   "%tmp_119 = call i66 @_ssdm_op_Read.ap_fifo.volatile.i66P(i66* @demux2setPathValue_V)"   --->   Operation 61 'read' 'tmp_119' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_56 = call i1 @_ssdm_op_BitSelect.i1.i66.i32(i66 %tmp_119, i32 64)" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:278]   --->   Operation 62 'bitselect' 'tmp_56' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (1.00ns)   --->   "br i1 %tmp_56, label %2, label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:279]   --->   Operation 63 'br' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 1.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_57 = trunc i66 %tmp_119 to i64" [sources/valueStore/valueStore.cpp:281]   --->   Operation 64 'trunc' 'tmp_57' <Predicate = (setState_load == 0 & tmp & tmp_3 & tmp_56)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%p_Result_2 = zext i64 %tmp_57 to i512" [sources/valueStore/valueStore.cpp:281]   --->   Operation 65 'zext' 'p_Result_2' <Predicate = (setState_load == 0 & tmp & tmp_3 & tmp_56)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (1.07ns)   --->   "store i3 1, i3* @setState, align 1" [sources/valueStore/valueStore.cpp:282]   --->   Operation 66 'store' <Predicate = (setState_load == 0 & tmp & tmp_3 & tmp_56)> <Delay = 1.07>
ST_1 : Operation 67 [1/1] (1.00ns)   --->   "br label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:283]   --->   Operation 67 'br' <Predicate = (setState_load == 0 & tmp & tmp_3 & tmp_56)> <Delay = 1.00>

State 2 <SV = 1> <Delay = 5.59>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%p_Val2_s = load i512* @setValueBuffer_V, align 16" [sources/valueStore/valueStore.cpp:293]   --->   Operation 68 'load' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%setCtrlWord_address_s = load i32* @setMdBuffer_address_s, align 4" [sources/valueStore/valueStore.cpp:306]   --->   Operation 69 'load' 'setCtrlWord_address_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_count_V = load i8* @setNumOfWords, align 1" [sources/valueStore/valueStore.cpp:307]   --->   Operation 70 'load' 'tmp_count_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:350]   --->   Operation 71 'write' <Predicate = (setState_load == 6)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 72 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i1P(i1* @filterPopSet_V_V, i1 true)" [sources/valueStore/valueStore.cpp:351]   --->   Operation 72 'write' <Predicate = (setState_load == 6)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_2 : Operation 73 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:343]   --->   Operation 73 'write' <Predicate = (setState_load == 5)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node tmp_46)   --->   "%tmp_31 = trunc i66 %tmp_543 to i64" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328]   --->   Operation 74 'trunc' 'tmp_31' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node tmp_46)   --->   "%loc_V_1 = zext i64 %tmp_31 to i512" [sources/valueStore/valueStore.cpp:329]   --->   Operation 75 'zext' 'loc_V_1' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_36 = call i10 @_ssdm_op_BitConcatenate.i10.i4.i6(i4 %tmp_33, i6 0)" [sources/valueStore/valueStore.cpp:329]   --->   Operation 76 'bitconcatenate' 'tmp_36' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (1.34ns)   --->   "%tmp_38 = sub i10 511, %tmp_36" [sources/valueStore/valueStore.cpp:329]   --->   Operation 77 'sub' 'tmp_38' <Predicate = (setState_load == 2 & tmp_2 & tmp_34)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node tmp_42)   --->   "%tmp_39 = select i1 %tmp_34, i10 %tmp_36, i10 %tmp_37" [sources/valueStore/valueStore.cpp:329]   --->   Operation 78 'select' 'tmp_39' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_40 = select i1 %tmp_34, i10 %tmp_37, i10 %tmp_36" [sources/valueStore/valueStore.cpp:329]   --->   Operation 79 'select' 'tmp_40' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node tmp_46)   --->   "%tmp_41 = select i1 %tmp_34, i10 %tmp_38, i10 %tmp_36" [sources/valueStore/valueStore.cpp:329]   --->   Operation 80 'select' 'tmp_41' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (1.34ns) (out node of the LUT)   --->   "%tmp_42 = sub i10 511, %tmp_39" [sources/valueStore/valueStore.cpp:329]   --->   Operation 81 'sub' 'tmp_42' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node tmp_46)   --->   "%tmp_43 = zext i10 %tmp_41 to i512" [sources/valueStore/valueStore.cpp:329]   --->   Operation 82 'zext' 'tmp_43' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_44 = zext i10 %tmp_40 to i512" [sources/valueStore/valueStore.cpp:329]   --->   Operation 83 'zext' 'tmp_44' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_45 = zext i10 %tmp_42 to i512" [sources/valueStore/valueStore.cpp:329]   --->   Operation 84 'zext' 'tmp_45' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (2.35ns) (out node of the LUT)   --->   "%tmp_46 = shl i512 %loc_V_1, %tmp_43" [sources/valueStore/valueStore.cpp:329]   --->   Operation 85 'shl' 'tmp_46' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 2.35> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node p_Result_1)   --->   "%tmp_47 = call i512 @llvm.part.select.i512(i512 %tmp_46, i32 511, i32 0)" [sources/valueStore/valueStore.cpp:329]   --->   Operation 86 'partselect' 'tmp_47' <Predicate = (setState_load == 2 & tmp_2 & tmp_34)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node p_Result_1)   --->   "%tmp_48 = select i1 %tmp_34, i512 %tmp_47, i512 %tmp_46" [sources/valueStore/valueStore.cpp:329]   --->   Operation 87 'select' 'tmp_48' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_49 = shl i512 -1, %tmp_44" [sources/valueStore/valueStore.cpp:329]   --->   Operation 88 'shl' 'tmp_49' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_50 = lshr i512 -1, %tmp_45" [sources/valueStore/valueStore.cpp:329]   --->   Operation 89 'lshr' 'tmp_50' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (1.72ns) (out node of the LUT)   --->   "%p_demorgan = and i512 %tmp_49, %tmp_50" [sources/valueStore/valueStore.cpp:329]   --->   Operation 90 'and' 'p_demorgan' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 1.72> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node p_Result_1)   --->   "%tmp_51 = xor i512 %p_demorgan, -1" [sources/valueStore/valueStore.cpp:329]   --->   Operation 91 'xor' 'tmp_51' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node p_Result_1)   --->   "%tmp_52 = and i512 %p_Val2_s, %tmp_51" [sources/valueStore/valueStore.cpp:329]   --->   Operation 92 'and' 'tmp_52' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node p_Result_1)   --->   "%tmp_53 = and i512 %tmp_48, %p_demorgan" [sources/valueStore/valueStore.cpp:329]   --->   Operation 93 'and' 'tmp_53' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 94 [1/1] (0.89ns) (out node of the LUT)   --->   "%p_Result_1 = or i512 %tmp_52, %tmp_53" [sources/valueStore/valueStore.cpp:329]   --->   Operation 94 'or' 'p_Result_1' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 0.89> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (1.00ns)   --->   "br label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:337]   --->   Operation 95 'br' <Predicate = (setState_load == 2 & tmp_2)> <Delay = 1.00>
ST_2 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_429 = call i40 @_ssdm_op_BitConcatenate.i40.i8.i32(i8 %tmp_count_V, i32 %setCtrlWord_address_s)" [sources/valueStore/valueStore.cpp:319]   --->   Operation 96 'bitconcatenate' 'tmp_429' <Predicate = (setState_load == 4)> <Delay = 0.00>
ST_2 : Operation 97 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i40P(i40* %memWrCmd_V, i40 %tmp_429)" [sources/valueStore/valueStore.cpp:319]   --->   Operation 97 'write' <Predicate = (setState_load == 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 98 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:320]   --->   Operation 98 'write' <Predicate = (setState_load == 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_35 = call i40 @_ssdm_op_BitConcatenate.i40.i8.i32(i8 %tmp_count_V, i32 %setCtrlWord_address_s)" [sources/valueStore/valueStore.cpp:308]   --->   Operation 99 'bitconcatenate' 'tmp_35' <Predicate = (setState_load == 3)> <Delay = 0.00>
ST_2 : Operation 100 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i40P(i40* %memWrCmd_V, i40 %tmp_35)" [sources/valueStore/valueStore.cpp:308]   --->   Operation 100 'write' <Predicate = (setState_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 101 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:309]   --->   Operation 101 'write' <Predicate = (setState_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 102 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i1P(i1* @filterPopSet_V_V, i1 true)" [sources/valueStore/valueStore.cpp:310]   --->   Operation 102 'write' <Predicate = (setState_load == 3)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 66> <Depth = 2> <FIFO>
ST_2 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_7 = trunc i66 %tmp_29 to i64" [sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:292]   --->   Operation 103 'trunc' 'tmp_7' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_2 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%loc_V = zext i64 %tmp_7 to i512" [sources/valueStore/valueStore.cpp:293]   --->   Operation 104 'zext' 'loc_V' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_2 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_11 = call i10 @_ssdm_op_BitConcatenate.i10.i4.i6(i4 %tmp_9, i6 0)" [sources/valueStore/valueStore.cpp:293]   --->   Operation 105 'bitconcatenate' 'tmp_11' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_2 : Operation 106 [1/1] (1.34ns)   --->   "%tmp_13 = sub i10 511, %tmp_11" [sources/valueStore/valueStore.cpp:293]   --->   Operation 106 'sub' 'tmp_13' <Predicate = (setState_load == 1 & tmp_1 & tmp_10)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node tmp_17)   --->   "%tmp_14 = select i1 %tmp_10, i10 %tmp_11, i10 %tmp_12" [sources/valueStore/valueStore.cpp:293]   --->   Operation 107 'select' 'tmp_14' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_15 = select i1 %tmp_10, i10 %tmp_12, i10 %tmp_11" [sources/valueStore/valueStore.cpp:293]   --->   Operation 108 'select' 'tmp_15' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_16 = select i1 %tmp_10, i10 %tmp_13, i10 %tmp_11" [sources/valueStore/valueStore.cpp:293]   --->   Operation 109 'select' 'tmp_16' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 110 [1/1] (1.34ns) (out node of the LUT)   --->   "%tmp_17 = sub i10 511, %tmp_14" [sources/valueStore/valueStore.cpp:293]   --->   Operation 110 'sub' 'tmp_17' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node tmp_21)   --->   "%tmp_18 = zext i10 %tmp_16 to i512" [sources/valueStore/valueStore.cpp:293]   --->   Operation 111 'zext' 'tmp_18' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_2 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_19 = zext i10 %tmp_15 to i512" [sources/valueStore/valueStore.cpp:293]   --->   Operation 112 'zext' 'tmp_19' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_2 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_20 = zext i10 %tmp_17 to i512" [sources/valueStore/valueStore.cpp:293]   --->   Operation 113 'zext' 'tmp_20' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00>
ST_2 : Operation 114 [1/1] (2.35ns) (out node of the LUT)   --->   "%tmp_21 = shl i512 %loc_V, %tmp_18" [sources/valueStore/valueStore.cpp:293]   --->   Operation 114 'shl' 'tmp_21' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 2.35> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp_22 = call i512 @llvm.part.select.i512(i512 %tmp_21, i32 511, i32 0)" [sources/valueStore/valueStore.cpp:293]   --->   Operation 115 'partselect' 'tmp_22' <Predicate = (setState_load == 1 & tmp_1 & tmp_10)> <Delay = 0.00>
ST_2 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp_23 = select i1 %tmp_10, i512 %tmp_22, i512 %tmp_21" [sources/valueStore/valueStore.cpp:293]   --->   Operation 116 'select' 'tmp_23' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_24 = shl i512 -1, %tmp_19" [sources/valueStore/valueStore.cpp:293]   --->   Operation 117 'shl' 'tmp_24' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_25 = lshr i512 -1, %tmp_20" [sources/valueStore/valueStore.cpp:293]   --->   Operation 118 'lshr' 'tmp_25' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.72> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 119 [1/1] (1.72ns) (out node of the LUT)   --->   "%p_demorgan1 = and i512 %tmp_24, %tmp_25" [sources/valueStore/valueStore.cpp:293]   --->   Operation 119 'and' 'p_demorgan1' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 1.72> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp_26 = xor i512 %p_demorgan1, -1" [sources/valueStore/valueStore.cpp:293]   --->   Operation 120 'xor' 'tmp_26' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp_27 = and i512 %p_Val2_s, %tmp_26" [sources/valueStore/valueStore.cpp:293]   --->   Operation 121 'and' 'tmp_27' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node p_Result_s)   --->   "%tmp_28 = and i512 %tmp_23, %p_demorgan1" [sources/valueStore/valueStore.cpp:293]   --->   Operation 122 'and' 'tmp_28' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 123 [1/1] (0.89ns) (out node of the LUT)   --->   "%p_Result_s = or i512 %tmp_27, %tmp_28" [sources/valueStore/valueStore.cpp:293]   --->   Operation 123 'or' 'p_Result_s' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 0.89> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 124 [1/1] (1.00ns)   --->   "br label %._crit_edge2.i" [sources/valueStore/valueStore.cpp:300]   --->   Operation 124 'br' <Predicate = (setState_load == 1 & tmp_1)> <Delay = 1.00>
ST_2 : Operation 125 [1/1] (0.00ns)   --->   "store i32 %tmp_55, i32* @setMdBuffer_address_s, align 4" [sources/valueStore/../globals.h:143->sources/valueStore/valueStore.cpp:274]   --->   Operation 125 'store' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_2 : Operation 126 [1/1] (0.00ns)   --->   "%tmp_8_i = zext i7 %tmp_6 to i8" [sources/valueStore/valueStore.cpp:275]   --->   Operation 126 'zext' 'tmp_8_i' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_2 : Operation 127 [1/1] (1.27ns)   --->   "%tmp_14_i = add i8 1, %tmp_8_i" [sources/valueStore/valueStore.cpp:277]   --->   Operation 127 'add' 'tmp_14_i' <Predicate = (setState_load == 0 & tmp & tmp_3 & tmp_11_i)> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 128 [1/1] (0.37ns)   --->   "%storemerge4_i = select i1 %tmp_11_i, i8 %tmp_14_i, i8 %tmp_8_i" [sources/valueStore/valueStore.cpp:276]   --->   Operation 128 'select' 'storemerge4_i' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 129 [1/1] (0.00ns)   --->   "store i8 %storemerge4_i, i8* @setNumOfWords, align 1" [sources/valueStore/valueStore.cpp:275]   --->   Operation 129 'store' <Predicate = (setState_load == 0 & tmp & tmp_3)> <Delay = 0.00>
ST_2 : Operation 130 [1/1] (0.00ns)   --->   "%setValueBuffer_V_fla = phi i1 [ false, %entry ], [ false, %8 ], [ false, %7 ], [ false, %5 ], [ false, %4 ], [ true, %._crit_edge5.i ], [ true, %2 ], [ true, %1 ], [ true, %0 ], [ true, %_ifconv ], [ false, %3 ], [ true, %_ifconv1 ], [ false, %6 ]"   --->   Operation 130 'phi' 'setValueBuffer_V_fla' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 131 [1/1] (0.00ns)   --->   "%setValueBuffer_V_new = phi i512 [ undef, %entry ], [ undef, %8 ], [ undef, %7 ], [ undef, %5 ], [ undef, %4 ], [ 0, %._crit_edge5.i ], [ %p_Result_2, %2 ], [ 0, %1 ], [ 0, %0 ], [ %p_Result_s, %_ifconv ], [ undef, %3 ], [ %p_Result_1, %_ifconv1 ], [ undef, %6 ]"   --->   Operation 131 'phi' 'setValueBuffer_V_new' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 132 [1/1] (0.00ns)   --->   "br i1 %setValueBuffer_V_fla, label %mergeST.i, label %setPath.exit"   --->   Operation 132 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 133 [1/1] (0.00ns)   --->   "store i512 %setValueBuffer_V_new, i512* @setValueBuffer_V, align 16" [sources/valueStore/valueStore.cpp:271]   --->   Operation 133 'store' <Predicate = (setValueBuffer_V_fla)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i45* @demux2setPathMetadat_1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1175, i32 0, i32 0, [1 x i8]* @p_str1176, [1 x i8]* @p_str1177, [1 x i8]* @p_str1178, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1179, [1 x i8]* @p_str1180)"   --->   Operation 134 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 135 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i66* @demux2setPathValue_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1168, i32 0, i32 0, [1 x i8]* @p_str1169, [1 x i8]* @p_str1170, [1 x i8]* @p_str1171, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1172, [1 x i8]* @p_str1173)"   --->   Operation 135 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 136 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1* @filterPopSet_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1147, i32 0, i32 0, [1 x i8]* @p_str1148, [1 x i8]* @p_str1149, [1 x i8]* @p_str1150, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1151, [1 x i8]* @p_str1152)"   --->   Operation 136 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i512* %memWrData_V_V, [5 x i8]* @p_str324, i32 1, i32 1, [5 x i8]* @p_str425, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122, [1 x i8]* @p_str122, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122) nounwind"   --->   Operation 137 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40* %memWrCmd_V, [5 x i8]* @p_str324, i32 1, i32 1, [5 x i8]* @p_str425, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122, [1 x i8]* @p_str122, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122) nounwind"   --->   Operation 138 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sources/valueStore/valueStore.cpp:255]   --->   Operation 139 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 2, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [sources/valueStore/valueStore.cpp:258]   --->   Operation 140 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 141 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:350]   --->   Operation 141 'write' <Predicate = (setState_load == 6)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 142 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:343]   --->   Operation 142 'write' <Predicate = (setState_load == 5)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 143 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i40P(i40* %memWrCmd_V, i40 %tmp_429)" [sources/valueStore/valueStore.cpp:319]   --->   Operation 143 'write' <Predicate = (setState_load == 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 144 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:320]   --->   Operation 144 'write' <Predicate = (setState_load == 4)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 145 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i40P(i40* %memWrCmd_V, i40 %tmp_35)" [sources/valueStore/valueStore.cpp:308]   --->   Operation 145 'write' <Predicate = (setState_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 146 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i512P(i512* %memWrData_V_V, i512 %p_Val2_s)" [sources/valueStore/valueStore.cpp:309]   --->   Operation 146 'write' <Predicate = (setState_load == 3)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 147 [1/1] (0.00ns)   --->   "br label %setPath.exit"   --->   Operation 147 'br' <Predicate = (setValueBuffer_V_fla)> <Delay = 0.00>
ST_3 : Operation 148 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 148 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.66ns, clock uncertainty: 0.832ns.

 <State 1>: 3.98ns
The critical path consists of the following:
	fifo read on port 'demux2setPathValue_V' [39]  (2.39 ns)
	'select' operation ('storemerge_i', sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328) [68]  (0 ns)
	'select' operation ('storemerge3_i', sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328) [70]  (0.51 ns)
	'store' operation (sources/valueStore/valueStore.cpp:331) of variable 'storemerge3_i', sources/valueStore/../globals.h:114->sources/valueStore/valueStore.cpp:328 on static variable 'setState' [71]  (1.08 ns)

 <State 2>: 5.6ns
The critical path consists of the following:
	'sub' operation ('tmp_38', sources/valueStore/valueStore.cpp:329) [49]  (1.35 ns)
	'select' operation ('tmp_41', sources/valueStore/valueStore.cpp:329) [52]  (0 ns)
	'shl' operation ('tmp_46', sources/valueStore/valueStore.cpp:329) [57]  (2.35 ns)
	'select' operation ('tmp_48', sources/valueStore/valueStore.cpp:329) [59]  (0 ns)
	'and' operation ('tmp_53', sources/valueStore/valueStore.cpp:329) [65]  (0 ns)
	'or' operation ('__Result__', sources/valueStore/valueStore.cpp:329) [66]  (0.895 ns)
	multiplexor before 'phi' operation ('setValueBuffer_V_fla') [157]  (1 ns)
	'phi' operation ('setValueBuffer_V_fla') [157]  (0 ns)

 <State 3>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
