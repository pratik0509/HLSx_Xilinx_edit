

================================================================
== Vivado HLS Report for 'memRead'
================================================================
* Date:           Tue Nov 13 22:51:03 2018

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        memcachedPipeline_prj
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690tffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.66|     5.378|        0.83|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    2|    2|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.37>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%memRdState_load = load i1* @memRdState, align 1" [sources/hashTable/memRead.cpp:42]   --->   Operation 4 'load' 'memRdState_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "br i1 %memRdState_load, label %5, label %0" [sources/hashTable/memRead.cpp:42]   --->   Operation 5 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_NbReadReq.ap_fifo.i64P(i64* @cc2memReadMd_V, i32 1)"   --->   Operation 6 'nbreadreq' 'tmp' <Predicate = (!memRdState_load)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "br i1 %tmp, label %1, label %._crit_edge1.i" [sources/hashTable/memRead.cpp:45]   --->   Operation 7 'br' <Predicate = (!memRdState_load)> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp_29 = call i1 @_ssdm_op_NbReadReq.ap_fifo.i130P(i130* @cc2memRead_V, i32 1)"   --->   Operation 8 'nbreadreq' 'tmp_29' <Predicate = (!memRdState_load & tmp)> <Delay = 0.00> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>
ST_1 : Operation 9 [1/1] (2.39ns)   --->   "%tmp27 = call i64 @_ssdm_op_Read.ap_fifo.volatile.i64P(i64* @cc2memReadMd_V)"   --->   Operation 9 'read' 'tmp27' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp_operation_V = trunc i64 %tmp27 to i8" [sources/hashTable/../globals.h:136->sources/hashTable/memRead.cpp:46]   --->   Operation 10 'trunc' 'tmp_operation_V' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_keyLength_V = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %tmp27, i32 40, i32 47)" [sources/hashTable/../globals.h:136->sources/hashTable/memRead.cpp:46]   --->   Operation 11 'partselect' 'tmp_keyLength_V' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (2.39ns)   --->   "%tmp_1 = call i130 @_ssdm_op_Read.ap_fifo.volatile.i130P(i130* @cc2memRead_V)"   --->   Operation 12 'read' 'tmp_1' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_Val2_s = trunc i130 %tmp_1 to i128" [sources/hashTable/../globals.h:120->sources/hashTable/memRead.cpp:47]   --->   Operation 13 'trunc' 'p_Val2_s' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_EOP_V_4 = call i1 @_ssdm_op_BitSelect.i1.i130.i32(i130 %tmp_1, i32 129)" [sources/hashTable/../globals.h:120->sources/hashTable/memRead.cpp:47]   --->   Operation 14 'bitselect' 'tmp_EOP_V_4' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.86ns)   --->   "%tmp_i = icmp eq i8 %tmp_operation_V, 8" [sources/hashTable/memRead.cpp:49]   --->   Operation 15 'icmp' 'tmp_i' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %tmp_i, label %._crit_edge3.i_ifconv, label %3" [sources/hashTable/memRead.cpp:49]   --->   Operation 16 'br' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp_30 = call i4 @_ssdm_op_PartSelect.i4.i64.i32.i32(i64 %tmp27, i32 44, i32 47)" [sources/hashTable/memRead.cpp:53]   --->   Operation 17 'partselect' 'tmp_30' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%r_V = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %tmp_30, i4 0)" [sources/hashTable/memRead.cpp:54]   --->   Operation 18 'bitconcatenate' 'r_V' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.86ns)   --->   "%tmp_128_i = icmp ugt i8 %tmp_keyLength_V, %r_V" [sources/hashTable/memRead.cpp:54]   --->   Operation 19 'icmp' 'tmp_128_i' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.86ns)   --->   "%tmp_129_i = icmp ult i8 %tmp_keyLength_V, 17" [sources/hashTable/memRead.cpp:60]   --->   Operation 20 'icmp' 'tmp_129_i' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_31 = call i5 @_ssdm_op_PartSelect.i5.i64.i32.i32(i64 %tmp27, i32 40, i32 44)"   --->   Operation 21 'partselect' 'tmp_31' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_131_i = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %tmp_31, i3 0)" [sources/hashTable/memRead.cpp:62]   --->   Operation 22 'bitconcatenate' 'tmp_131_i' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.35ns)   --->   "%tmp_336 = sub i8 -128, %tmp_131_i" [sources/hashTable/memRead.cpp:62]   --->   Operation 23 'sub' 'tmp_336' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%tmp_337 = zext i8 %tmp_336 to i128" [sources/hashTable/memRead.cpp:62]   --->   Operation 24 'zext' 'tmp_337' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%tmp_338 = lshr i128 -1, %tmp_337" [sources/hashTable/memRead.cpp:62]   --->   Operation 25 'lshr' 'tmp_338' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%p_Result_s = and i128 %p_Val2_s, %tmp_338" [sources/hashTable/memRead.cpp:62]   --->   Operation 26 'and' 'p_Result_s' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (1.35ns)   --->   "%tmp_340 = sub i8 -128, %tmp_131_i" [sources/hashTable/memRead.cpp:62]   --->   Operation 27 'sub' 'tmp_340' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%tmp_341 = zext i8 %tmp_340 to i128" [sources/hashTable/memRead.cpp:62]   --->   Operation 28 'zext' 'tmp_341' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%tmp_342 = lshr i128 -1, %tmp_341" [sources/hashTable/memRead.cpp:62]   --->   Operation 29 'lshr' 'tmp_342' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V)   --->   "%p_Result_23 = and i128 %p_Result_s, %tmp_342" [sources/hashTable/memRead.cpp:62]   --->   Operation 30 'and' 'p_Result_23' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.54> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.62ns) (out node of the LUT)   --->   "%tmp_data_V = select i1 %tmp_129_i, i128 %p_Result_23, i128 %p_Val2_s" [sources/hashTable/memRead.cpp:65]   --->   Operation 31 'select' 'tmp_data_V' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 1.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_43_i = call i2 @_ssdm_op_PartSelect.i2.i130.i32.i32(i130 %tmp_1, i32 128, i32 129)" [sources/hashTable/memRead.cpp:65]   --->   Operation 32 'partselect' 'tmp_43_i' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "br i1 %tmp_EOP_V_4, label %._crit_edge5.i, label %4" [sources/hashTable/memRead.cpp:67]   --->   Operation 33 'br' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.85ns)   --->   "store i1 true, i1* @memRdState, align 1" [sources/hashTable/memRead.cpp:68]   --->   Operation 34 'store' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_EOP_V_4)> <Delay = 0.85>
ST_1 : Operation 35 [1/1] (2.39ns)   --->   "%tmp_5 = call i130 @_ssdm_op_Read.ap_fifo.volatile.i130P(i130* @cc2memRead_V)"   --->   Operation 35 'read' 'tmp_5' <Predicate = (memRdState_load)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_EOP_V = call i1 @_ssdm_op_BitSelect.i1.i130.i32(i130 %tmp_5, i32 129)" [sources/hashTable/../globals.h:120->sources/hashTable/memRead.cpp:74]   --->   Operation 36 'bitselect' 'tmp_EOP_V' <Predicate = (memRdState_load)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %tmp_EOP_V, label %6, label %._crit_edge6.i" [sources/hashTable/memRead.cpp:76]   --->   Operation 37 'br' <Predicate = (memRdState_load)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.85ns)   --->   "store i1 false, i1* @memRdState, align 1" [sources/hashTable/memRead.cpp:77]   --->   Operation 38 'store' <Predicate = (memRdState_load & tmp_EOP_V)> <Delay = 0.85>

State 2 <SV = 1> <Delay = 2.39>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %tmp_29, label %2, label %._crit_edge1.i" [sources/hashTable/memRead.cpp:45]   --->   Operation 39 'br' <Predicate = (!memRdState_load & tmp)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%p_Result_i = call i7 @_ssdm_op_PartSelect.i7.i64.i32.i32(i64 %tmp27, i32 8, i32 14)" [sources/hashTable/memRead.cpp:52]   --->   Operation 40 'partselect' 'p_Result_i' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node memData_count_V)   --->   "%memData_count_V_cast = zext i4 %tmp_30 to i5" [sources/hashTable/memRead.cpp:53]   --->   Operation 41 'zext' 'memData_count_V_cast' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node memData_count_V)   --->   "%p_0184_1_0_v_cast_i_c = select i1 %tmp_128_i, i5 2, i5 1" [sources/hashTable/memRead.cpp:54]   --->   Operation 42 'select' 'p_0184_1_0_v_cast_i_c' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.01ns) (out node of the LUT)   --->   "%memData_count_V = add i5 %p_0184_1_0_v_cast_i_c, %memData_count_V_cast" [sources/hashTable/memRead.cpp:54]   --->   Operation 43 'add' 'memData_count_V' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.35> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_s = call i37 @_ssdm_op_BitConcatenate.i37.i5.i22.i7.i3(i5 %memData_count_V, i22 0, i7 %p_Result_i, i3 0)" [sources/hashTable/memRead.cpp:54]   --->   Operation 44 'bitconcatenate' 'tmp_s' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_2 = zext i37 %tmp_s to i40" [sources/hashTable/memRead.cpp:58]   --->   Operation 45 'zext' 'tmp_2' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i40P(i40* %memRdCtrl_V, i40 %tmp_2)" [sources/hashTable/memRead.cpp:58]   --->   Operation 46 'write' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_3 = call i130 @_ssdm_op_BitConcatenate.i130.i2.i128(i2 %tmp_43_i, i128 %tmp_data_V)" [sources/hashTable/memRead.cpp:65]   --->   Operation 47 'bitconcatenate' 'tmp_3' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i130P(i130* @memRd2comp_V, i130 %tmp_3)" [sources/hashTable/memRead.cpp:65]   --->   Operation 48 'write' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>
ST_2 : Operation 49 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* @memRd2compMd_V, i64 %tmp27)"   --->   Operation 49 'write' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>
ST_2 : Operation 50 [1/1] (2.39ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i130P(i130* @memRd2comp_V, i130 %tmp_5)"   --->   Operation 50 'write' <Predicate = (memRdState_load)> <Delay = 2.39> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 2.39> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 130> <Depth = 2> <FIFO>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i130* @cc2memRead_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1231, i32 0, i32 0, [1 x i8]* @p_str1232, [1 x i8]* @p_str1233, [1 x i8]* @p_str1234, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1235, [1 x i8]* @p_str1236)"   --->   Operation 51 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* @cc2memReadMd_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1224, i32 0, i32 0, [1 x i8]* @p_str1225, [1 x i8]* @p_str1226, [1 x i8]* @p_str1227, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1228, [1 x i8]* @p_str1229)"   --->   Operation 52 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i130* @memRd2comp_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1049, i32 0, i32 0, [1 x i8]* @p_str1050, [1 x i8]* @p_str1051, [1 x i8]* @p_str1052, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1053, [1 x i8]* @p_str1054)"   --->   Operation 53 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* @memRd2compMd_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str1042, i32 0, i32 0, [1 x i8]* @p_str1043, [1 x i8]* @p_str1044, [1 x i8]* @p_str1045, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str1046, [1 x i8]* @p_str1047)"   --->   Operation 54 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40* %memRdCtrl_V, [5 x i8]* @p_str324, i32 1, i32 1, [5 x i8]* @p_str425, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122, [1 x i8]* @p_str122, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str122, [1 x i8]* @p_str122) nounwind"   --->   Operation 55 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 2, i32 1, i32 0, [1 x i8]* @p_str43) nounwind" [sources/hashTable/memRead.cpp:35]   --->   Operation 56 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i40P(i40* %memRdCtrl_V, i40 %tmp_2)" [sources/hashTable/memRead.cpp:58]   --->   Operation 57 'write' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "br label %._crit_edge3.i_ifconv" [sources/hashTable/memRead.cpp:59]   --->   Operation 58 'br' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_i)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "br label %._crit_edge5.i" [sources/hashTable/memRead.cpp:68]   --->   Operation 59 'br' <Predicate = (!memRdState_load & tmp & tmp_29 & !tmp_EOP_V_4)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "br label %._crit_edge1.i" [sources/hashTable/memRead.cpp:69]   --->   Operation 60 'br' <Predicate = (!memRdState_load & tmp & tmp_29)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "br label %memRead.exit" [sources/hashTable/memRead.cpp:70]   --->   Operation 61 'br' <Predicate = (!memRdState_load)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "br label %._crit_edge6.i" [sources/hashTable/memRead.cpp:77]   --->   Operation 62 'br' <Predicate = (memRdState_load & tmp_EOP_V)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "br label %memRead.exit" [sources/hashTable/memRead.cpp:78]   --->   Operation 63 'br' <Predicate = (memRdState_load)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 64 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6.66ns, clock uncertainty: 0.832ns.

 <State 1>: 5.38ns
The critical path consists of the following:
	fifo read on port 'cc2memReadMd_V' [22]  (2.39 ns)
	'sub' operation ('tmp_340', sources/hashTable/memRead.cpp:62) [50]  (1.36 ns)
	'lshr' operation ('tmp_342', sources/hashTable/memRead.cpp:62) [52]  (0 ns)
	'and' operation ('__Result__', sources/hashTable/memRead.cpp:62) [53]  (0 ns)
	'select' operation ('tmp.data.V', sources/hashTable/memRead.cpp:65) [54]  (1.63 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	fifo write on port 'memRd2comp_V' (sources/hashTable/memRead.cpp:65) [57]  (2.39 ns)

 <State 3>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
