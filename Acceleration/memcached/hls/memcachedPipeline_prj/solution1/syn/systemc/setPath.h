// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _setPath_HH_
#define _setPath_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct setPath : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<66> > demux2setPathValue_V_dout;
    sc_in< sc_logic > demux2setPathValue_V_empty_n;
    sc_out< sc_logic > demux2setPathValue_V_read;
    sc_in< sc_lv<45> > demux2setPathMetadat_1_dout;
    sc_in< sc_logic > demux2setPathMetadat_1_empty_n;
    sc_out< sc_logic > demux2setPathMetadat_1_read;
    sc_out< sc_lv<1> > filterPopSet_V_V_din;
    sc_in< sc_logic > filterPopSet_V_V_full_n;
    sc_out< sc_logic > filterPopSet_V_V_write;
    sc_in< sc_logic > memWrData_V_V_TREADY;
    sc_in< sc_logic > memWrCmd_V_TREADY;
    sc_out< sc_lv<40> > memWrCmd_V_TDATA;
    sc_out< sc_logic > memWrCmd_V_TVALID;
    sc_out< sc_lv<512> > memWrData_V_V_TDATA;
    sc_out< sc_logic > memWrData_V_V_TVALID;


    // Module declarations
    setPath(sc_module_name name);
    SC_HAS_PROCESS(setPath);

    ~setPath();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<2> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_lv<2> > ap_CS_iter2_fsm;
    sc_signal< sc_logic > ap_CS_iter2_fsm_state0;
    sc_signal< sc_lv<3> > setState_load_load_fu_339_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_158_p3;
    sc_signal< bool > ap_predicate_op15_read_state1;
    sc_signal< bool > ap_predicate_op39_read_state1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_172_p3;
    sc_signal< bool > ap_predicate_op55_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<3> > setState_load_reg_844;
    sc_signal< sc_lv<3> > setState_load_reg_844_pp0_iter0_reg;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > memWrData_V_V_1_ack_in;
    sc_signal< sc_logic > memWrCmd_V_1_ack_in;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<3> > setState_load_reg_844_pp0_iter1_reg;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_logic > ap_CS_iter2_fsm_state3;
    sc_signal< sc_lv<40> > memWrCmd_V_1_data_in;
    sc_signal< sc_lv<40> > memWrCmd_V_1_data_out;
    sc_signal< sc_logic > memWrCmd_V_1_vld_in;
    sc_signal< sc_logic > memWrCmd_V_1_vld_out;
    sc_signal< sc_logic > memWrCmd_V_1_ack_out;
    sc_signal< sc_lv<40> > memWrCmd_V_1_payload_A;
    sc_signal< sc_lv<40> > memWrCmd_V_1_payload_B;
    sc_signal< sc_logic > memWrCmd_V_1_sel_rd;
    sc_signal< sc_logic > memWrCmd_V_1_sel_wr;
    sc_signal< sc_logic > memWrCmd_V_1_sel;
    sc_signal< sc_logic > memWrCmd_V_1_load_A;
    sc_signal< sc_logic > memWrCmd_V_1_load_B;
    sc_signal< sc_lv<2> > memWrCmd_V_1_state;
    sc_signal< sc_logic > memWrCmd_V_1_state_cmp_full;
    sc_signal< sc_lv<512> > memWrData_V_V_1_data_out;
    sc_signal< sc_logic > memWrData_V_V_1_vld_in;
    sc_signal< sc_logic > memWrData_V_V_1_vld_out;
    sc_signal< sc_logic > memWrData_V_V_1_ack_out;
    sc_signal< sc_lv<512> > memWrData_V_V_1_payload_A;
    sc_signal< sc_lv<512> > memWrData_V_V_1_payload_B;
    sc_signal< sc_logic > memWrData_V_V_1_sel_rd;
    sc_signal< sc_logic > memWrData_V_V_1_sel_wr;
    sc_signal< sc_logic > memWrData_V_V_1_sel;
    sc_signal< sc_logic > memWrData_V_V_1_load_A;
    sc_signal< sc_logic > memWrData_V_V_1_load_B;
    sc_signal< sc_lv<2> > memWrData_V_V_1_state;
    sc_signal< sc_logic > memWrData_V_V_1_state_cmp_full;
    sc_signal< sc_lv<3> > setState;
    sc_signal< sc_lv<512> > setValueBuffer_V;
    sc_signal< sc_lv<32> > setMdBuffer_address_s;
    sc_signal< sc_lv<8> > setNumOfWords;
    sc_signal< sc_lv<8> > counter;
    sc_signal< sc_logic > memWrCmd_V_TDATA_blk_n;
    sc_signal< sc_logic > memWrData_V_V_TDATA_blk_n;
    sc_signal< sc_logic > demux2setPathMetadat_1_blk_n;
    sc_signal< sc_logic > demux2setPathValue_V_blk_n;
    sc_signal< sc_logic > filterPopSet_V_V_blk_n;
    sc_signal< sc_lv<66> > reg_335;
    sc_signal< sc_lv<1> > tmp_2_reg_848;
    sc_signal< sc_lv<1> > tmp_2_reg_848_pp0_iter0_reg;
    sc_signal< sc_lv<4> > tmp_33_fu_348_p1;
    sc_signal< sc_lv<4> > tmp_33_reg_852;
    sc_signal< sc_lv<1> > tmp_34_fu_366_p2;
    sc_signal< sc_lv<1> > tmp_34_reg_857;
    sc_signal< sc_lv<10> > tmp_37_fu_372_p1;
    sc_signal< sc_lv<10> > tmp_37_reg_865;
    sc_signal< sc_lv<1> > tmp_1_reg_871;
    sc_signal< sc_lv<1> > tmp_1_reg_871_pp0_iter0_reg;
    sc_signal< sc_lv<4> > tmp_9_fu_410_p1;
    sc_signal< sc_lv<4> > tmp_9_reg_875;
    sc_signal< sc_lv<1> > tmp_10_fu_428_p2;
    sc_signal< sc_lv<1> > tmp_10_reg_880;
    sc_signal< sc_lv<10> > tmp_12_fu_434_p1;
    sc_signal< sc_lv<10> > tmp_12_reg_888;
    sc_signal< sc_lv<1> > tmp_reg_894;
    sc_signal< sc_lv<1> > tmp_reg_894_pp0_iter0_reg;
    sc_signal< sc_lv<1> > tmp_3_reg_898;
    sc_signal< sc_lv<1> > tmp_3_reg_898_pp0_iter0_reg;
    sc_signal< sc_lv<32> > tmp_55_fu_472_p1;
    sc_signal< sc_lv<32> > tmp_55_reg_902;
    sc_signal< sc_lv<7> > tmp_6_fu_486_p4;
    sc_signal< sc_lv<7> > tmp_6_reg_907;
    sc_signal< sc_lv<1> > tmp_11_i_fu_504_p2;
    sc_signal< sc_lv<1> > tmp_11_i_reg_912;
    sc_signal< sc_lv<512> > p_Result_2_fu_522_p1;
    sc_signal< sc_lv<1> > tmp_56_fu_510_p3;
    sc_signal< sc_lv<40> > tmp_429_fu_669_p3;
    sc_signal< sc_lv<40> > tmp_35_fu_678_p3;
    sc_signal< sc_lv<1> > ap_phi_mux_setValueBuffer_V_fla_phi_fu_213_p26;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter0_setValueBuffer_V_fla_reg_208;
    sc_signal< sc_lv<1> > ap_phi_reg_pp0_iter1_setValueBuffer_V_fla_reg_208;
    sc_signal< sc_lv<512> > ap_phi_mux_setValueBuffer_V_new_phi_fu_260_p26;
    sc_signal< sc_lv<512> > ap_phi_reg_pp0_iter0_setValueBuffer_V_new_reg_255;
    sc_signal< sc_lv<512> > ap_phi_reg_pp0_iter1_setValueBuffer_V_new_reg_255;
    sc_signal< sc_lv<512> > p_Result_s_fu_804_p2;
    sc_signal< sc_lv<512> > p_Result_1_fu_662_p2;
    sc_signal< sc_lv<3> > storemerge3_i_fu_396_p3;
    sc_signal< sc_lv<3> > storemerge2_i_fu_458_p3;
    sc_signal< sc_lv<8> > storemerge4_i_fu_825_p3;
    sc_signal< sc_lv<8> > grp_fu_324_p2;
    sc_signal< sc_lv<14> > Lo_assign_1_fu_352_p3;
    sc_signal< sc_lv<14> > Hi_assign_1_fu_360_p2;
    sc_signal< sc_lv<1> > grp_fu_316_p3;
    sc_signal< sc_lv<1> > tmp_13_i_fu_376_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_390_p2;
    sc_signal< sc_lv<3> > storemerge_i_fu_382_p3;
    sc_signal< sc_lv<14> > Lo_assign_fu_414_p3;
    sc_signal< sc_lv<14> > Hi_assign_fu_422_p2;
    sc_signal< sc_lv<1> > tmp_12_i_fu_438_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_452_p2;
    sc_signal< sc_lv<3> > storemerge1_i_fu_444_p3;
    sc_signal< sc_lv<13> > tmp_length_V_load_ne_fu_476_p4;
    sc_signal< sc_lv<13> > op2_assign_fu_496_p3;
    sc_signal< sc_lv<64> > tmp_57_fu_518_p1;
    sc_signal< sc_lv<64> > tmp_31_fu_545_p1;
    sc_signal< sc_lv<10> > tmp_36_fu_553_p3;
    sc_signal< sc_lv<10> > tmp_38_fu_560_p2;
    sc_signal< sc_lv<10> > tmp_39_fu_566_p3;
    sc_signal< sc_lv<10> > tmp_41_fu_578_p3;
    sc_signal< sc_lv<10> > tmp_40_fu_572_p3;
    sc_signal< sc_lv<10> > tmp_42_fu_585_p2;
    sc_signal< sc_lv<512> > loc_V_1_fu_549_p1;
    sc_signal< sc_lv<512> > tmp_43_fu_591_p1;
    sc_signal< sc_lv<512> > tmp_46_fu_603_p2;
    sc_signal< sc_lv<512> > tmp_47_fu_609_p4;
    sc_signal< sc_lv<512> > tmp_44_fu_595_p1;
    sc_signal< sc_lv<512> > tmp_45_fu_599_p1;
    sc_signal< sc_lv<512> > tmp_49_fu_626_p2;
    sc_signal< sc_lv<512> > tmp_50_fu_632_p2;
    sc_signal< sc_lv<512> > p_demorgan_fu_638_p2;
    sc_signal< sc_lv<512> > tmp_51_fu_644_p2;
    sc_signal< sc_lv<512> > tmp_48_fu_619_p3;
    sc_signal< sc_lv<512> > tmp_52_fu_650_p2;
    sc_signal< sc_lv<512> > tmp_53_fu_656_p2;
    sc_signal< sc_lv<64> > tmp_7_fu_687_p1;
    sc_signal< sc_lv<10> > tmp_11_fu_695_p3;
    sc_signal< sc_lv<10> > tmp_13_fu_702_p2;
    sc_signal< sc_lv<10> > tmp_14_fu_708_p3;
    sc_signal< sc_lv<10> > tmp_16_fu_720_p3;
    sc_signal< sc_lv<10> > tmp_15_fu_714_p3;
    sc_signal< sc_lv<10> > tmp_17_fu_727_p2;
    sc_signal< sc_lv<512> > loc_V_fu_691_p1;
    sc_signal< sc_lv<512> > tmp_18_fu_733_p1;
    sc_signal< sc_lv<512> > tmp_21_fu_745_p2;
    sc_signal< sc_lv<512> > tmp_22_fu_751_p4;
    sc_signal< sc_lv<512> > tmp_19_fu_737_p1;
    sc_signal< sc_lv<512> > tmp_20_fu_741_p1;
    sc_signal< sc_lv<512> > tmp_24_fu_768_p2;
    sc_signal< sc_lv<512> > tmp_25_fu_774_p2;
    sc_signal< sc_lv<512> > p_demorgan1_fu_780_p2;
    sc_signal< sc_lv<512> > tmp_26_fu_786_p2;
    sc_signal< sc_lv<512> > tmp_23_fu_761_p3;
    sc_signal< sc_lv<512> > tmp_27_fu_792_p2;
    sc_signal< sc_lv<512> > tmp_28_fu_798_p2;
    sc_signal< sc_lv<8> > tmp_8_i_fu_816_p1;
    sc_signal< sc_lv<8> > tmp_14_i_fu_819_p2;
    sc_signal< sc_lv<1> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter1_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter2_fsm;
    sc_signal< bool > ap_condition_474;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_iter0_fsm_state1;
    static const sc_lv<2> ap_ST_iter1_fsm_state2;
    static const sc_lv<2> ap_ST_iter2_fsm_state3;
    static const sc_lv<2> ap_ST_iter1_fsm_state0;
    static const sc_lv<2> ap_ST_iter2_fsm_state0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<14> ap_const_lv14_3F;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<512> ap_const_lv512_lc_3;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<66> ap_const_lv66_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Hi_assign_1_fu_360_p2();
    void thread_Hi_assign_fu_422_p2();
    void thread_Lo_assign_1_fu_352_p3();
    void thread_Lo_assign_fu_414_p3();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state2();
    void thread_ap_CS_iter2_fsm_state0();
    void thread_ap_CS_iter2_fsm_state3();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_474();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_setValueBuffer_V_fla_phi_fu_213_p26();
    void thread_ap_phi_mux_setValueBuffer_V_new_phi_fu_260_p26();
    void thread_ap_phi_reg_pp0_iter0_setValueBuffer_V_fla_reg_208();
    void thread_ap_phi_reg_pp0_iter0_setValueBuffer_V_new_reg_255();
    void thread_ap_predicate_op15_read_state1();
    void thread_ap_predicate_op39_read_state1();
    void thread_ap_predicate_op55_read_state1();
    void thread_ap_ready();
    void thread_demux2setPathMetadat_1_blk_n();
    void thread_demux2setPathMetadat_1_read();
    void thread_demux2setPathValue_V_blk_n();
    void thread_demux2setPathValue_V_read();
    void thread_filterPopSet_V_V_blk_n();
    void thread_filterPopSet_V_V_din();
    void thread_filterPopSet_V_V_write();
    void thread_grp_fu_316_p3();
    void thread_grp_fu_324_p2();
    void thread_grp_nbreadreq_fu_158_p3();
    void thread_loc_V_1_fu_549_p1();
    void thread_loc_V_fu_691_p1();
    void thread_memWrCmd_V_1_ack_in();
    void thread_memWrCmd_V_1_ack_out();
    void thread_memWrCmd_V_1_data_in();
    void thread_memWrCmd_V_1_data_out();
    void thread_memWrCmd_V_1_load_A();
    void thread_memWrCmd_V_1_load_B();
    void thread_memWrCmd_V_1_sel();
    void thread_memWrCmd_V_1_state_cmp_full();
    void thread_memWrCmd_V_1_vld_in();
    void thread_memWrCmd_V_1_vld_out();
    void thread_memWrCmd_V_TDATA();
    void thread_memWrCmd_V_TDATA_blk_n();
    void thread_memWrCmd_V_TVALID();
    void thread_memWrData_V_V_1_ack_in();
    void thread_memWrData_V_V_1_ack_out();
    void thread_memWrData_V_V_1_data_out();
    void thread_memWrData_V_V_1_load_A();
    void thread_memWrData_V_V_1_load_B();
    void thread_memWrData_V_V_1_sel();
    void thread_memWrData_V_V_1_state_cmp_full();
    void thread_memWrData_V_V_1_vld_in();
    void thread_memWrData_V_V_1_vld_out();
    void thread_memWrData_V_V_TDATA();
    void thread_memWrData_V_V_TDATA_blk_n();
    void thread_memWrData_V_V_TVALID();
    void thread_op2_assign_fu_496_p3();
    void thread_p_Result_1_fu_662_p2();
    void thread_p_Result_2_fu_522_p1();
    void thread_p_Result_s_fu_804_p2();
    void thread_p_demorgan1_fu_780_p2();
    void thread_p_demorgan_fu_638_p2();
    void thread_setState_load_load_fu_339_p1();
    void thread_setState_load_reg_844_pp0_iter0_reg();
    void thread_storemerge1_i_fu_444_p3();
    void thread_storemerge2_i_fu_458_p3();
    void thread_storemerge3_i_fu_396_p3();
    void thread_storemerge4_i_fu_825_p3();
    void thread_storemerge_i_fu_382_p3();
    void thread_tmp_10_fu_428_p2();
    void thread_tmp_11_fu_695_p3();
    void thread_tmp_11_i_fu_504_p2();
    void thread_tmp_12_fu_434_p1();
    void thread_tmp_12_i_fu_438_p2();
    void thread_tmp_13_fu_702_p2();
    void thread_tmp_13_i_fu_376_p2();
    void thread_tmp_14_fu_708_p3();
    void thread_tmp_14_i_fu_819_p2();
    void thread_tmp_15_fu_714_p3();
    void thread_tmp_16_fu_720_p3();
    void thread_tmp_17_fu_727_p2();
    void thread_tmp_18_fu_733_p1();
    void thread_tmp_19_fu_737_p1();
    void thread_tmp_1_reg_871_pp0_iter0_reg();
    void thread_tmp_20_fu_741_p1();
    void thread_tmp_21_fu_745_p2();
    void thread_tmp_22_fu_751_p4();
    void thread_tmp_23_fu_761_p3();
    void thread_tmp_24_fu_768_p2();
    void thread_tmp_25_fu_774_p2();
    void thread_tmp_26_fu_786_p2();
    void thread_tmp_27_fu_792_p2();
    void thread_tmp_28_fu_798_p2();
    void thread_tmp_2_reg_848_pp0_iter0_reg();
    void thread_tmp_31_fu_545_p1();
    void thread_tmp_33_fu_348_p1();
    void thread_tmp_34_fu_366_p2();
    void thread_tmp_35_fu_678_p3();
    void thread_tmp_36_fu_553_p3();
    void thread_tmp_37_fu_372_p1();
    void thread_tmp_38_fu_560_p2();
    void thread_tmp_39_fu_566_p3();
    void thread_tmp_3_reg_898_pp0_iter0_reg();
    void thread_tmp_40_fu_572_p3();
    void thread_tmp_41_fu_578_p3();
    void thread_tmp_429_fu_669_p3();
    void thread_tmp_42_fu_585_p2();
    void thread_tmp_43_fu_591_p1();
    void thread_tmp_44_fu_595_p1();
    void thread_tmp_45_fu_599_p1();
    void thread_tmp_46_fu_603_p2();
    void thread_tmp_47_fu_609_p4();
    void thread_tmp_48_fu_619_p3();
    void thread_tmp_49_fu_626_p2();
    void thread_tmp_4_fu_452_p2();
    void thread_tmp_50_fu_632_p2();
    void thread_tmp_51_fu_644_p2();
    void thread_tmp_52_fu_650_p2();
    void thread_tmp_53_fu_656_p2();
    void thread_tmp_55_fu_472_p1();
    void thread_tmp_56_fu_510_p3();
    void thread_tmp_57_fu_518_p1();
    void thread_tmp_5_fu_390_p2();
    void thread_tmp_6_fu_486_p4();
    void thread_tmp_7_fu_687_p1();
    void thread_tmp_8_i_fu_816_p1();
    void thread_tmp_9_fu_410_p1();
    void thread_tmp_length_V_load_ne_fu_476_p4();
    void thread_tmp_nbreadreq_fu_172_p3();
    void thread_tmp_reg_894_pp0_iter0_reg();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
    void thread_ap_NS_iter2_fsm();
};

}

using namespace ap_rtl;

#endif
