// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hashKeyResizer_HH_
#define _hashKeyResizer_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct hashKeyResizer : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<130> > in2hash_V_dout;
    sc_in< sc_logic > in2hash_V_empty_n;
    sc_out< sc_logic > in2hash_V_read;
    sc_in< sc_lv<8> > in2hashKeyLength_V_V_dout;
    sc_in< sc_logic > in2hashKeyLength_V_V_empty_n;
    sc_out< sc_logic > in2hashKeyLength_V_V_read;
    sc_out< sc_lv<96> > resizedKey_V_V_din;
    sc_in< sc_logic > resizedKey_V_V_full_n;
    sc_out< sc_logic > resizedKey_V_V_write;
    sc_out< sc_lv<32> > resizedKeyLength_V_din;
    sc_in< sc_logic > resizedKeyLength_V_full_n;
    sc_out< sc_logic > resizedKeyLength_V_write;
    sc_out< sc_lv<32> > resizedInitValue_V_din;
    sc_in< sc_logic > resizedInitValue_V_full_n;
    sc_out< sc_logic > resizedInitValue_V_write;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;


    // Module declarations
    hashKeyResizer(sc_module_name name);
    SC_HAS_PROCESS(hashKeyResizer);

    ~hashKeyResizer();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<2> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<3> > keyResizerState_load_load_fu_289_p1;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_166_p3;
    sc_signal< bool > ap_predicate_op14_read_state1;
    sc_signal< bool > ap_predicate_op33_read_state1;
    sc_signal< bool > ap_predicate_op46_read_state1;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_180_p3;
    sc_signal< bool > ap_predicate_op59_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<3> > keyResizerState_load_reg_564;
    sc_signal< sc_lv<1> > tmp_426_reg_575;
    sc_signal< bool > ap_predicate_op92_write_state2;
    sc_signal< sc_lv<1> > tmp_425_reg_589;
    sc_signal< bool > ap_predicate_op102_write_state2;
    sc_signal< sc_lv<1> > tmp_424_reg_598;
    sc_signal< bool > ap_predicate_op108_write_state2;
    sc_signal< sc_lv<1> > tmp_reg_607;
    sc_signal< sc_lv<1> > tmp_427_reg_611;
    sc_signal< bool > ap_predicate_op112_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state2;
    sc_signal< sc_lv<3> > keyResizerState;
    sc_signal< sc_lv<8> > keyResizerLength_V;
    sc_signal< sc_lv<128> > tempInput_data_V;
    sc_signal< sc_lv<96> > resizedKeyOutput_V;
    sc_signal< sc_logic > in2hashKeyLength_V_V_blk_n;
    sc_signal< sc_logic > in2hash_V_blk_n;
    sc_signal< sc_logic > resizedKeyLength_V_blk_n;
    sc_signal< sc_logic > resizedInitValue_V_blk_n;
    sc_signal< sc_logic > resizedKey_V_V_blk_n;
    sc_signal< sc_lv<128> > p_Val2_s_reg_568;
    sc_signal< sc_lv<96> > tmp_V_51_fu_312_p1;
    sc_signal< sc_lv<96> > tmp_V_51_reg_579;
    sc_signal< sc_lv<1> > tmp_190_i_fu_316_p2;
    sc_signal< sc_lv<32> > tmp_433_fu_372_p1;
    sc_signal< sc_lv<32> > tmp_433_reg_593;
    sc_signal< sc_lv<64> > tmp_430_fu_422_p1;
    sc_signal< sc_lv<64> > tmp_430_reg_602;
    sc_signal< sc_lv<8> > tmp_V_52_reg_615;
    sc_signal< sc_lv<96> > tmp_V_53_fu_470_p1;
    sc_signal< sc_lv<96> > tmp_V_53_reg_620;
    sc_signal< sc_lv<1> > tmp_191_i_fu_474_p2;
    sc_signal< sc_lv<96> > p_Result_40_fu_484_p5;
    sc_signal< sc_lv<96> > p_Result_39_fu_503_p5;
    sc_signal< sc_lv<96> > p_Result_38_fu_527_p3;
    sc_signal< sc_lv<96> > p_Result_s_fu_541_p3;
    sc_signal< sc_lv<3> > grp_fu_230_p3;
    sc_signal< sc_lv<3> > storemerge16_i_fu_340_p3;
    sc_signal< sc_lv<3> > storemerge20_i_fu_390_p3;
    sc_signal< sc_lv<3> > storemerge18_i_fu_440_p3;
    sc_signal< sc_lv<8> > tmp_i_fu_322_p2;
    sc_signal< sc_lv<8> > grp_fu_244_p2;
    sc_signal< sc_lv<128> > p_Val2_26_fu_302_p1;
    sc_signal< sc_lv<128> > p_Val2_25_fu_354_p1;
    sc_signal< sc_lv<128> > p_Val2_24_fu_404_p1;
    sc_signal< sc_lv<128> > p_Val2_27_fu_460_p1;
    sc_signal< sc_lv<1> > grp_fu_222_p3;
    sc_signal< sc_lv<1> > tmp_183_i_fu_334_p2;
    sc_signal< sc_lv<1> > tmp_432_fu_364_p3;
    sc_signal< sc_lv<1> > tmp_189_i_fu_376_p2;
    sc_signal< sc_lv<3> > storemerge19_i_fu_382_p3;
    sc_signal< sc_lv<1> > tmp_429_fu_414_p3;
    sc_signal< sc_lv<1> > tmp_187_i_fu_426_p2;
    sc_signal< sc_lv<3> > storemerge17_i_fu_432_p3;
    sc_signal< sc_lv<64> > grp_fu_271_p4;
    sc_signal< sc_lv<32> > grp_fu_280_p4;
    sc_signal< sc_lv<1> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter1_fsm;
    sc_signal< bool > ap_condition_174;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_iter0_fsm_state1;
    static const sc_lv<2> ap_ST_iter1_fsm_state2;
    static const sc_lv<2> ap_ST_iter1_fsm_state0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<96> ap_const_lv96_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_81;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<8> ap_const_lv8_C;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_8;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_clk_pos_reset_();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state2();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_174();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op102_write_state2();
    void thread_ap_predicate_op108_write_state2();
    void thread_ap_predicate_op112_write_state2();
    void thread_ap_predicate_op14_read_state1();
    void thread_ap_predicate_op33_read_state1();
    void thread_ap_predicate_op46_read_state1();
    void thread_ap_predicate_op59_read_state1();
    void thread_ap_predicate_op92_write_state2();
    void thread_ap_ready();
    void thread_grp_fu_222_p3();
    void thread_grp_fu_230_p3();
    void thread_grp_fu_244_p2();
    void thread_grp_fu_271_p4();
    void thread_grp_fu_280_p4();
    void thread_grp_nbreadreq_fu_166_p3();
    void thread_in2hashKeyLength_V_V_blk_n();
    void thread_in2hashKeyLength_V_V_read();
    void thread_in2hash_V_blk_n();
    void thread_in2hash_V_read();
    void thread_internal_ap_ready();
    void thread_keyResizerState_load_load_fu_289_p1();
    void thread_p_Result_38_fu_527_p3();
    void thread_p_Result_39_fu_503_p5();
    void thread_p_Result_40_fu_484_p5();
    void thread_p_Result_s_fu_541_p3();
    void thread_p_Val2_24_fu_404_p1();
    void thread_p_Val2_25_fu_354_p1();
    void thread_p_Val2_26_fu_302_p1();
    void thread_p_Val2_27_fu_460_p1();
    void thread_real_start();
    void thread_resizedInitValue_V_blk_n();
    void thread_resizedInitValue_V_din();
    void thread_resizedInitValue_V_write();
    void thread_resizedKeyLength_V_blk_n();
    void thread_resizedKeyLength_V_din();
    void thread_resizedKeyLength_V_write();
    void thread_resizedKey_V_V_blk_n();
    void thread_resizedKey_V_V_din();
    void thread_resizedKey_V_V_write();
    void thread_start_out();
    void thread_start_write();
    void thread_storemerge16_i_fu_340_p3();
    void thread_storemerge17_i_fu_432_p3();
    void thread_storemerge18_i_fu_440_p3();
    void thread_storemerge19_i_fu_382_p3();
    void thread_storemerge20_i_fu_390_p3();
    void thread_tmp_183_i_fu_334_p2();
    void thread_tmp_187_i_fu_426_p2();
    void thread_tmp_189_i_fu_376_p2();
    void thread_tmp_190_i_fu_316_p2();
    void thread_tmp_191_i_fu_474_p2();
    void thread_tmp_429_fu_414_p3();
    void thread_tmp_430_fu_422_p1();
    void thread_tmp_432_fu_364_p3();
    void thread_tmp_433_fu_372_p1();
    void thread_tmp_V_51_fu_312_p1();
    void thread_tmp_V_53_fu_470_p1();
    void thread_tmp_i_fu_322_p2();
    void thread_tmp_nbreadreq_fu_180_p3();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
};

}

using namespace ap_rtl;

#endif
