// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "receive.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic receive::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic receive::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> receive::ap_ST_iter0_fsm_state1 = "1";
const sc_lv<2> receive::ap_ST_iter1_fsm_state2 = "10";
const sc_lv<2> receive::ap_ST_iter1_fsm_state0 = "1";
const bool receive::ap_const_boolean_1 = true;
const sc_lv<32> receive::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> receive::ap_const_lv1_0 = "0";
const sc_lv<1> receive::ap_const_lv1_1 = "1";
const sc_lv<32> receive::ap_const_lv32_1 = "1";
const sc_lv<12> receive::ap_const_lv12_0 = "000000000000";
const sc_lv<8> receive::ap_const_lv8_0 = "00000000";
const sc_lv<512> receive::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<12> receive::ap_const_lv12_FF8 = "111111111000";
const sc_lv<8> receive::ap_const_lv8_1 = "1";
const sc_lv<6> receive::ap_const_lv6_0 = "000000";
const sc_lv<14> receive::ap_const_lv14_3F = "111111";
const sc_lv<32> receive::ap_const_lv32_1FF = "111111111";
const sc_lv<10> receive::ap_const_lv10_1FF = "111111111";
const sc_lv<32> receive::ap_const_lv32_3 = "11";
const sc_lv<32> receive::ap_const_lv32_B = "1011";
const sc_lv<9> receive::ap_const_lv9_0 = "000000000";
const sc_lv<8> receive::ap_const_lv8_7 = "111";
const sc_lv<512> receive::ap_const_lv512_lc_3 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<10> receive::ap_const_lv10_0 = "0000000000";
const sc_lv<64> receive::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

receive::receive(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Hi_assign_fu_210_p2);
    sensitive << ( Lo_assign_fu_202_p3 );

    SC_METHOD(thread_Lo_assign_fu_202_p3);
    sensitive << ( getCounter );

    SC_METHOD(thread_ap_CS_iter0_fsm_state1);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state0);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state2);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );

    SC_METHOD(thread_ap_condition_120);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_condition_192);
    sensitive << ( ap_done_reg );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state0 );

    SC_METHOD(thread_ap_phi_mux_storemerge11_i_phi_fu_136_p6);
    sensitive << ( real_start );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( tmp_96_i_fu_342_p2 );
    sensitive << ( tmp_97_i_fu_348_p2 );
    sensitive << ( getState );
    sensitive << ( ap_phi_reg_pp0_iter0_storemerge11_i_reg_133 );
    sensitive << ( tmp_98_i_fu_354_p2 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_storemerge11_i_reg_133);

    SC_METHOD(thread_ap_predicate_op10_read_state1);
    sensitive << ( tmp_nbreadreq_fu_90_p3 );
    sensitive << ( tmp_132_nbreadreq_fu_98_p3 );
    sensitive << ( getState );

    SC_METHOD(thread_ap_predicate_op47_read_state1);
    sensitive << ( tmp_96_i_fu_342_p2 );
    sensitive << ( tmp_97_i_fu_348_p2 );
    sensitive << ( getState );

    SC_METHOD(thread_ap_predicate_op60_write_state2);
    sensitive << ( getState_load_reg_392 );
    sensitive << ( tmp_reg_396 );
    sensitive << ( tmp_132_reg_400 );

    SC_METHOD(thread_ap_predicate_op68_write_state2);
    sensitive << ( getState_load_reg_392 );
    sensitive << ( tmp_96_i_reg_419 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_disp2rec_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );

    SC_METHOD(thread_disp2rec_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_filterPopGet_V_V_blk_n);
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_filterPopGet_V_V_din);
    sensitive << ( ap_done_reg );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_filterPopGet_V_V_write);
    sensitive << ( ap_done_reg );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_getPath2remux_V_V_blk_n);
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_getPath2remux_V_V_din);
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( tmp_V_18_reg_404 );
    sensitive << ( tmp_V_fu_387_p1 );
    sensitive << ( ap_condition_192 );

    SC_METHOD(thread_getPath2remux_V_V_write);
    sensitive << ( ap_done_reg );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_icmp_fu_316_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( getState );
    sensitive << ( tmp_131_fu_306_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_memRdData_V_V_TDATA_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );

    SC_METHOD(thread_memRdData_V_V_TREADY);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_p_Result_s_fu_382_p2);
    sensitive << ( tmp_127_reg_414 );
    sensitive << ( tmp_128_fu_376_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_storemerge_i_fu_328_p3);
    sensitive << ( icmp_fu_316_p2 );
    sensitive << ( tmp_95_i_fu_322_p2 );

    SC_METHOD(thread_tmp_100_i_fu_180_p2);
    sensitive << ( getCounter );

    SC_METHOD(thread_tmp_113_fu_198_p1);
    sensitive << ( getCounter );

    SC_METHOD(thread_tmp_114_fu_220_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( getState );
    sensitive << ( Lo_assign_fu_202_p3 );
    sensitive << ( Hi_assign_fu_210_p2 );

    SC_METHOD(thread_tmp_115_fu_226_p3);
    sensitive << ( tmp_113_fu_198_p1 );

    SC_METHOD(thread_tmp_116_fu_234_p1);
    sensitive << ( Hi_assign_fu_210_p2 );

    SC_METHOD(thread_tmp_117_fu_238_p4);
    sensitive << ( memInputWord_V );

    SC_METHOD(thread_tmp_118_fu_248_p2);
    sensitive << ( tmp_115_fu_226_p3 );
    sensitive << ( tmp_116_fu_234_p1 );

    SC_METHOD(thread_tmp_119_fu_254_p2);
    sensitive << ( tmp_115_fu_226_p3 );

    SC_METHOD(thread_tmp_120_fu_260_p2);
    sensitive << ( tmp_115_fu_226_p3 );
    sensitive << ( tmp_116_fu_234_p1 );

    SC_METHOD(thread_tmp_121_fu_266_p3);
    sensitive << ( tmp_114_fu_220_p2 );
    sensitive << ( tmp_118_fu_248_p2 );
    sensitive << ( tmp_120_fu_260_p2 );

    SC_METHOD(thread_tmp_122_fu_274_p3);
    sensitive << ( memInputWord_V );
    sensitive << ( tmp_114_fu_220_p2 );
    sensitive << ( tmp_117_fu_238_p4 );

    SC_METHOD(thread_tmp_123_fu_282_p3);
    sensitive << ( tmp_115_fu_226_p3 );
    sensitive << ( tmp_114_fu_220_p2 );
    sensitive << ( tmp_119_fu_254_p2 );

    SC_METHOD(thread_tmp_124_fu_290_p2);
    sensitive << ( tmp_121_fu_266_p3 );

    SC_METHOD(thread_tmp_125_fu_296_p1);
    sensitive << ( tmp_123_fu_282_p3 );

    SC_METHOD(thread_tmp_126_fu_373_p1);
    sensitive << ( tmp_124_reg_409 );

    SC_METHOD(thread_tmp_127_fu_300_p2);
    sensitive << ( tmp_122_fu_274_p3 );
    sensitive << ( tmp_125_fu_296_p1 );

    SC_METHOD(thread_tmp_128_fu_376_p2);
    sensitive << ( tmp_126_fu_373_p1 );

    SC_METHOD(thread_tmp_131_fu_306_p4);
    sensitive << ( getValueLength_V_1 );

    SC_METHOD(thread_tmp_132_nbreadreq_fu_98_p3);
    sensitive << ( memRdData_V_V_TVALID );

    SC_METHOD(thread_tmp_95_i_fu_322_p2);
    sensitive << ( getValueLength_V_1 );

    SC_METHOD(thread_tmp_96_i_fu_342_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( getState );
    sensitive << ( storemerge_i_fu_328_p3 );

    SC_METHOD(thread_tmp_97_i_fu_348_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( tmp_96_i_fu_342_p2 );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( getState );
    sensitive << ( getCounter );

    SC_METHOD(thread_tmp_98_i_fu_354_p2);
    sensitive << ( getCounter );

    SC_METHOD(thread_tmp_99_i_fu_168_p2);
    sensitive << ( disp2rec_V_V_dout );

    SC_METHOD(thread_tmp_V_18_fu_164_p1);
    sensitive << ( memRdData_V_V_TDATA );

    SC_METHOD(thread_tmp_V_fu_387_p1);
    sensitive << ( p_Result_s_fu_382_p2 );

    SC_METHOD(thread_tmp_nbreadreq_fu_90_p3);
    sensitive << ( disp2rec_V_V_empty_n );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op10_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op47_read_state1 );
    sensitive << ( getPath2remux_V_V_full_n );
    sensitive << ( getState_load_reg_392 );
    sensitive << ( ap_predicate_op60_write_state2 );
    sensitive << ( filterPopGet_V_V_full_n );
    sensitive << ( ap_predicate_op68_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_iter0_fsm = "1";
    ap_CS_iter1_fsm = "01";
    getState_load_reg_392 = "0";
    tmp_reg_396 = "0";
    tmp_132_reg_400 = "0";
    tmp_96_i_reg_419 = "0";
    getState = "0";
    getValueLength_V_1 = "000000000000";
    getCounter = "00000000";
    memInputWord_V = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    tmp_V_18_reg_404 = "0000000000000000000000000000000000000000000000000000000000000000";
    tmp_124_reg_409 = "0000000000";
    tmp_127_reg_414 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "receive_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, disp2rec_V_V_dout, "(port)disp2rec_V_V_dout");
    sc_trace(mVcdFile, disp2rec_V_V_empty_n, "(port)disp2rec_V_V_empty_n");
    sc_trace(mVcdFile, disp2rec_V_V_read, "(port)disp2rec_V_V_read");
    sc_trace(mVcdFile, memRdData_V_V_TVALID, "(port)memRdData_V_V_TVALID");
    sc_trace(mVcdFile, getPath2remux_V_V_din, "(port)getPath2remux_V_V_din");
    sc_trace(mVcdFile, getPath2remux_V_V_full_n, "(port)getPath2remux_V_V_full_n");
    sc_trace(mVcdFile, getPath2remux_V_V_write, "(port)getPath2remux_V_V_write");
    sc_trace(mVcdFile, filterPopGet_V_V_din, "(port)filterPopGet_V_V_din");
    sc_trace(mVcdFile, filterPopGet_V_V_full_n, "(port)filterPopGet_V_V_full_n");
    sc_trace(mVcdFile, filterPopGet_V_V_write, "(port)filterPopGet_V_V_write");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, memRdData_V_V_TDATA, "(port)memRdData_V_V_TDATA");
    sc_trace(mVcdFile, memRdData_V_V_TREADY, "(port)memRdData_V_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state1, "ap_CS_iter0_fsm_state1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state0, "ap_CS_iter1_fsm_state0");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_90_p3, "tmp_nbreadreq_fu_90_p3");
    sc_trace(mVcdFile, tmp_132_nbreadreq_fu_98_p3, "tmp_132_nbreadreq_fu_98_p3");
    sc_trace(mVcdFile, ap_predicate_op10_read_state1, "ap_predicate_op10_read_state1");
    sc_trace(mVcdFile, tmp_96_i_fu_342_p2, "tmp_96_i_fu_342_p2");
    sc_trace(mVcdFile, tmp_97_i_fu_348_p2, "tmp_97_i_fu_348_p2");
    sc_trace(mVcdFile, ap_predicate_op47_read_state1, "ap_predicate_op47_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, getState_load_reg_392, "getState_load_reg_392");
    sc_trace(mVcdFile, tmp_reg_396, "tmp_reg_396");
    sc_trace(mVcdFile, tmp_132_reg_400, "tmp_132_reg_400");
    sc_trace(mVcdFile, ap_predicate_op60_write_state2, "ap_predicate_op60_write_state2");
    sc_trace(mVcdFile, tmp_96_i_reg_419, "tmp_96_i_reg_419");
    sc_trace(mVcdFile, ap_predicate_op68_write_state2, "ap_predicate_op68_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state2, "ap_CS_iter1_fsm_state2");
    sc_trace(mVcdFile, getState, "getState");
    sc_trace(mVcdFile, getValueLength_V_1, "getValueLength_V_1");
    sc_trace(mVcdFile, getCounter, "getCounter");
    sc_trace(mVcdFile, memInputWord_V, "memInputWord_V");
    sc_trace(mVcdFile, memRdData_V_V_TDATA_blk_n, "memRdData_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, disp2rec_V_V_blk_n, "disp2rec_V_V_blk_n");
    sc_trace(mVcdFile, getPath2remux_V_V_blk_n, "getPath2remux_V_V_blk_n");
    sc_trace(mVcdFile, filterPopGet_V_V_blk_n, "filterPopGet_V_V_blk_n");
    sc_trace(mVcdFile, tmp_V_18_fu_164_p1, "tmp_V_18_fu_164_p1");
    sc_trace(mVcdFile, tmp_V_18_reg_404, "tmp_V_18_reg_404");
    sc_trace(mVcdFile, tmp_124_fu_290_p2, "tmp_124_fu_290_p2");
    sc_trace(mVcdFile, tmp_124_reg_409, "tmp_124_reg_409");
    sc_trace(mVcdFile, tmp_127_fu_300_p2, "tmp_127_fu_300_p2");
    sc_trace(mVcdFile, tmp_127_reg_414, "tmp_127_reg_414");
    sc_trace(mVcdFile, ap_phi_mux_storemerge11_i_phi_fu_136_p6, "ap_phi_mux_storemerge11_i_phi_fu_136_p6");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_storemerge11_i_reg_133, "ap_phi_reg_pp0_iter0_storemerge11_i_reg_133");
    sc_trace(mVcdFile, tmp_98_i_fu_354_p2, "tmp_98_i_fu_354_p2");
    sc_trace(mVcdFile, tmp_V_fu_387_p1, "tmp_V_fu_387_p1");
    sc_trace(mVcdFile, tmp_99_i_fu_168_p2, "tmp_99_i_fu_168_p2");
    sc_trace(mVcdFile, storemerge_i_fu_328_p3, "storemerge_i_fu_328_p3");
    sc_trace(mVcdFile, tmp_100_i_fu_180_p2, "tmp_100_i_fu_180_p2");
    sc_trace(mVcdFile, Lo_assign_fu_202_p3, "Lo_assign_fu_202_p3");
    sc_trace(mVcdFile, Hi_assign_fu_210_p2, "Hi_assign_fu_210_p2");
    sc_trace(mVcdFile, tmp_113_fu_198_p1, "tmp_113_fu_198_p1");
    sc_trace(mVcdFile, tmp_115_fu_226_p3, "tmp_115_fu_226_p3");
    sc_trace(mVcdFile, tmp_116_fu_234_p1, "tmp_116_fu_234_p1");
    sc_trace(mVcdFile, tmp_114_fu_220_p2, "tmp_114_fu_220_p2");
    sc_trace(mVcdFile, tmp_118_fu_248_p2, "tmp_118_fu_248_p2");
    sc_trace(mVcdFile, tmp_120_fu_260_p2, "tmp_120_fu_260_p2");
    sc_trace(mVcdFile, tmp_117_fu_238_p4, "tmp_117_fu_238_p4");
    sc_trace(mVcdFile, tmp_119_fu_254_p2, "tmp_119_fu_254_p2");
    sc_trace(mVcdFile, tmp_121_fu_266_p3, "tmp_121_fu_266_p3");
    sc_trace(mVcdFile, tmp_123_fu_282_p3, "tmp_123_fu_282_p3");
    sc_trace(mVcdFile, tmp_122_fu_274_p3, "tmp_122_fu_274_p3");
    sc_trace(mVcdFile, tmp_125_fu_296_p1, "tmp_125_fu_296_p1");
    sc_trace(mVcdFile, tmp_131_fu_306_p4, "tmp_131_fu_306_p4");
    sc_trace(mVcdFile, icmp_fu_316_p2, "icmp_fu_316_p2");
    sc_trace(mVcdFile, tmp_95_i_fu_322_p2, "tmp_95_i_fu_322_p2");
    sc_trace(mVcdFile, tmp_126_fu_373_p1, "tmp_126_fu_373_p1");
    sc_trace(mVcdFile, tmp_128_fu_376_p2, "tmp_128_fu_376_p2");
    sc_trace(mVcdFile, p_Result_s_fu_382_p2, "p_Result_s_fu_382_p2");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_condition_120, "ap_condition_120");
    sc_trace(mVcdFile, ap_condition_192, "ap_condition_192");
#endif

    }
}

receive::~receive() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void receive::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        getCounter = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_120.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1)) {
                getCounter = ap_phi_mux_storemerge11_i_phi_fu_136_p6.read();
            } else if (esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) {
                getCounter = tmp_100_i_fu_180_p2.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        getState = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_120.read(), ap_const_boolean_1)) {
            if ((esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_96_i_fu_342_p2.read()))) {
                getState = ap_const_lv1_0;
            } else if (esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) {
                getState = ap_const_lv1_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        getState_load_reg_392 = ap_const_lv1_0;
    } else {
        if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
            getState_load_reg_392 = getState.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        getValueLength_V_1 = ap_const_lv12_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_120.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1)) {
                getValueLength_V_1 = storemerge_i_fu_328_p3.read();
            } else if (esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) {
                getValueLength_V_1 = tmp_99_i_fu_168_p2.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        memInputWord_V = ap_const_lv512_lc_1;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1) && 
              !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1)))))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1) && 
              !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1)))))))) {
            memInputWord_V = memRdData_V_V_TDATA.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_124_reg_409 = ap_const_lv10_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))))) {
            tmp_124_reg_409 = tmp_124_fu_290_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_127_reg_414 = ap_const_lv512_lc_1;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))))) {
            tmp_127_reg_414 = tmp_127_fu_300_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_132_reg_400 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(getState.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))))) {
            tmp_132_reg_400 =  (sc_lv<1>) (memRdData_V_V_TVALID.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_96_i_reg_419 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))))) {
            tmp_96_i_reg_419 = tmp_96_i_fu_342_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_V_18_reg_404 = ap_const_lv64_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))))) {
            tmp_V_18_reg_404 = tmp_V_18_fu_164_p1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_reg_396 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(getState.read(), ap_const_lv1_0) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))))) {
            tmp_reg_396 =  (sc_lv<1>) (disp2rec_V_V_empty_n.read());
        }
    }
}

void receive::thread_Hi_assign_fu_210_p2() {
    Hi_assign_fu_210_p2 = (Lo_assign_fu_202_p3.read() | ap_const_lv14_3F);
}

void receive::thread_Lo_assign_fu_202_p3() {
    Lo_assign_fu_202_p3 = esl_concat<8,6>(getCounter.read(), ap_const_lv6_0);
}

void receive::thread_ap_CS_iter0_fsm_state1() {
    ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm.read()[0];
}

void receive::thread_ap_CS_iter1_fsm_state0() {
    ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm.read()[0];
}

void receive::thread_ap_CS_iter1_fsm_state2() {
    ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm.read()[1];
}

void receive::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)));
}

void receive::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1)));
}

void receive::thread_ap_condition_120() {
    ap_condition_120 = (!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()));
}

void receive::thread_ap_condition_192() {
    ap_condition_192 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))));
}

void receive::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void receive::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void receive::thread_ap_phi_mux_storemerge11_i_phi_fu_136_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_96_i_fu_342_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_97_i_fu_348_p2.read()))) {
        ap_phi_mux_storemerge11_i_phi_fu_136_p6 = tmp_98_i_fu_354_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_96_i_fu_342_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_96_i_fu_342_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_97_i_fu_348_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, real_start.read())))) {
        ap_phi_mux_storemerge11_i_phi_fu_136_p6 = ap_const_lv8_0;
    } else {
        ap_phi_mux_storemerge11_i_phi_fu_136_p6 = ap_phi_reg_pp0_iter0_storemerge11_i_reg_133.read();
    }
}

void receive::thread_ap_phi_reg_pp0_iter0_storemerge11_i_reg_133() {
    ap_phi_reg_pp0_iter0_storemerge11_i_reg_133 =  (sc_lv<8>) ("XXXXXXXX");
}

void receive::thread_ap_predicate_op10_read_state1() {
    ap_predicate_op10_read_state1 = (esl_seteq<1,1,1>(getState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_132_nbreadreq_fu_98_p3.read()));
}

void receive::thread_ap_predicate_op47_read_state1() {
    ap_predicate_op47_read_state1 = (esl_seteq<1,1,1>(getState.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_96_i_fu_342_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_97_i_fu_348_p2.read()));
}

void receive::thread_ap_predicate_op60_write_state2() {
    ap_predicate_op60_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, getState_load_reg_392.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_396.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_132_reg_400.read()));
}

void receive::thread_ap_predicate_op68_write_state2() {
    ap_predicate_op68_write_state2 = (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_96_i_reg_419.read()));
}

void receive::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void receive::thread_disp2rec_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        disp2rec_V_V_blk_n = disp2rec_V_V_empty_n.read();
    } else {
        disp2rec_V_V_blk_n = ap_const_logic_1;
    }
}

void receive::thread_disp2rec_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1) && 
         !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))))) {
        disp2rec_V_V_read = ap_const_logic_1;
    } else {
        disp2rec_V_V_read = ap_const_logic_0;
    }
}

void receive::thread_filterPopGet_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()))) {
        filterPopGet_V_V_blk_n = filterPopGet_V_V_full_n.read();
    } else {
        filterPopGet_V_V_blk_n = ap_const_logic_1;
    }
}

void receive::thread_filterPopGet_V_V_din() {
    filterPopGet_V_V_din = ap_const_lv1_1;
}

void receive::thread_filterPopGet_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))) {
        filterPopGet_V_V_write = ap_const_logic_1;
    } else {
        filterPopGet_V_V_write = ap_const_logic_0;
    }
}

void receive::thread_getPath2remux_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())))) {
        getPath2remux_V_V_blk_n = getPath2remux_V_V_full_n.read();
    } else {
        getPath2remux_V_V_blk_n = ap_const_logic_1;
    }
}

void receive::thread_getPath2remux_V_V_din() {
    if (esl_seteq<1,1,1>(ap_condition_192.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1)) {
            getPath2remux_V_V_din = tmp_V_fu_387_p1.read();
        } else if (esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) {
            getPath2remux_V_V_din = tmp_V_18_reg_404.read();
        } else {
            getPath2remux_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        getPath2remux_V_V_din = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void receive::thread_getPath2remux_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1)))))) {
        getPath2remux_V_V_write = ap_const_logic_1;
    } else {
        getPath2remux_V_V_write = ap_const_logic_0;
    }
}

void receive::thread_icmp_fu_316_p2() {
    icmp_fu_316_p2 = (!tmp_131_fu_306_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_131_fu_306_p4.read() != ap_const_lv9_0);
}

void receive::thread_internal_ap_ready() {
    if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void receive::thread_memRdData_V_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))))) {
        memRdData_V_V_TDATA_blk_n = memRdData_V_V_TVALID.read();
    } else {
        memRdData_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void receive::thread_memRdData_V_V_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1)))))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1)))))))) {
        memRdData_V_V_TREADY = ap_const_logic_1;
    } else {
        memRdData_V_V_TREADY = ap_const_logic_0;
    }
}

void receive::thread_p_Result_s_fu_382_p2() {
    p_Result_s_fu_382_p2 = (tmp_127_reg_414.read() & tmp_128_fu_376_p2.read());
}

void receive::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void receive::thread_start_out() {
    start_out = real_start.read();
}

void receive::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void receive::thread_storemerge_i_fu_328_p3() {
    storemerge_i_fu_328_p3 = (!icmp_fu_316_p2.read()[0].is_01())? sc_lv<12>(): ((icmp_fu_316_p2.read()[0].to_bool())? tmp_95_i_fu_322_p2.read(): ap_const_lv12_0);
}

void receive::thread_tmp_100_i_fu_180_p2() {
    tmp_100_i_fu_180_p2 = (!ap_const_lv8_1.is_01() || !getCounter.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(getCounter.read()));
}

void receive::thread_tmp_113_fu_198_p1() {
    tmp_113_fu_198_p1 = getCounter.read().range(4-1, 0);
}

void receive::thread_tmp_114_fu_220_p2() {
    tmp_114_fu_220_p2 = (!Lo_assign_fu_202_p3.read().is_01() || !Hi_assign_fu_210_p2.read().is_01())? sc_lv<1>(): (sc_biguint<14>(Lo_assign_fu_202_p3.read()) > sc_biguint<14>(Hi_assign_fu_210_p2.read()));
}

void receive::thread_tmp_115_fu_226_p3() {
    tmp_115_fu_226_p3 = esl_concat<4,6>(tmp_113_fu_198_p1.read(), ap_const_lv6_0);
}

void receive::thread_tmp_116_fu_234_p1() {
    tmp_116_fu_234_p1 = Hi_assign_fu_210_p2.read().range(10-1, 0);
}

void receive::thread_tmp_117_fu_238_p4() {
    tmp_117_fu_238_p4 = memInputWord_V.read().range(0, 511);
}

void receive::thread_tmp_118_fu_248_p2() {
    tmp_118_fu_248_p2 = (!tmp_115_fu_226_p3.read().is_01() || !tmp_116_fu_234_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_115_fu_226_p3.read()) - sc_biguint<10>(tmp_116_fu_234_p1.read()));
}

void receive::thread_tmp_119_fu_254_p2() {
    tmp_119_fu_254_p2 = (!ap_const_lv10_1FF.is_01() || !tmp_115_fu_226_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1FF) - sc_biguint<10>(tmp_115_fu_226_p3.read()));
}

void receive::thread_tmp_120_fu_260_p2() {
    tmp_120_fu_260_p2 = (!tmp_116_fu_234_p1.read().is_01() || !tmp_115_fu_226_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_116_fu_234_p1.read()) - sc_biguint<10>(tmp_115_fu_226_p3.read()));
}

void receive::thread_tmp_121_fu_266_p3() {
    tmp_121_fu_266_p3 = (!tmp_114_fu_220_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_114_fu_220_p2.read()[0].to_bool())? tmp_118_fu_248_p2.read(): tmp_120_fu_260_p2.read());
}

void receive::thread_tmp_122_fu_274_p3() {
    tmp_122_fu_274_p3 = (!tmp_114_fu_220_p2.read()[0].is_01())? sc_lv<512>(): ((tmp_114_fu_220_p2.read()[0].to_bool())? tmp_117_fu_238_p4.read(): memInputWord_V.read());
}

void receive::thread_tmp_123_fu_282_p3() {
    tmp_123_fu_282_p3 = (!tmp_114_fu_220_p2.read()[0].is_01())? sc_lv<10>(): ((tmp_114_fu_220_p2.read()[0].to_bool())? tmp_119_fu_254_p2.read(): tmp_115_fu_226_p3.read());
}

void receive::thread_tmp_124_fu_290_p2() {
    tmp_124_fu_290_p2 = (!ap_const_lv10_1FF.is_01() || !tmp_121_fu_266_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1FF) - sc_biguint<10>(tmp_121_fu_266_p3.read()));
}

void receive::thread_tmp_125_fu_296_p1() {
    tmp_125_fu_296_p1 = esl_zext<512,10>(tmp_123_fu_282_p3.read());
}

void receive::thread_tmp_126_fu_373_p1() {
    tmp_126_fu_373_p1 = esl_zext<512,10>(tmp_124_reg_409.read());
}

void receive::thread_tmp_127_fu_300_p2() {
    tmp_127_fu_300_p2 = (!tmp_125_fu_296_p1.read().is_01())? sc_lv<512>(): tmp_122_fu_274_p3.read() >> (unsigned short)tmp_125_fu_296_p1.read().to_uint();
}

void receive::thread_tmp_128_fu_376_p2() {
    tmp_128_fu_376_p2 = (!tmp_126_fu_373_p1.read().is_01())? sc_lv<512>(): ap_const_lv512_lc_3 >> (unsigned short)tmp_126_fu_373_p1.read().to_uint();
}

void receive::thread_tmp_131_fu_306_p4() {
    tmp_131_fu_306_p4 = getValueLength_V_1.read().range(11, 3);
}

void receive::thread_tmp_132_nbreadreq_fu_98_p3() {
    tmp_132_nbreadreq_fu_98_p3 =  (sc_lv<1>) (memRdData_V_V_TVALID.read());
}

void receive::thread_tmp_95_i_fu_322_p2() {
    tmp_95_i_fu_322_p2 = (!getValueLength_V_1.read().is_01() || !ap_const_lv12_FF8.is_01())? sc_lv<12>(): (sc_biguint<12>(getValueLength_V_1.read()) + sc_bigint<12>(ap_const_lv12_FF8));
}

void receive::thread_tmp_96_i_fu_342_p2() {
    tmp_96_i_fu_342_p2 = (!storemerge_i_fu_328_p3.read().is_01() || !ap_const_lv12_0.is_01())? sc_lv<1>(): sc_lv<1>(storemerge_i_fu_328_p3.read() == ap_const_lv12_0);
}

void receive::thread_tmp_97_i_fu_348_p2() {
    tmp_97_i_fu_348_p2 = (!getCounter.read().is_01() || !ap_const_lv8_7.is_01())? sc_lv<1>(): sc_lv<1>(getCounter.read() == ap_const_lv8_7);
}

void receive::thread_tmp_98_i_fu_354_p2() {
    tmp_98_i_fu_354_p2 = (!getCounter.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(getCounter.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void receive::thread_tmp_99_i_fu_168_p2() {
    tmp_99_i_fu_168_p2 = (!ap_const_lv12_FF8.is_01() || !disp2rec_V_V_dout.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_FF8) + sc_biguint<12>(disp2rec_V_V_dout.read()));
}

void receive::thread_tmp_V_18_fu_164_p1() {
    tmp_V_18_fu_164_p1 = memRdData_V_V_TDATA.read().range(64-1, 0);
}

void receive::thread_tmp_V_fu_387_p1() {
    tmp_V_fu_387_p1 = p_Result_s_fu_382_p2.read().range(64-1, 0);
}

void receive::thread_tmp_nbreadreq_fu_90_p3() {
    tmp_nbreadreq_fu_90_p3 =  (sc_lv<1>) (disp2rec_V_V_empty_n.read());
}

void receive::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm =  (sc_lv<1>) ("X");
            break;
    }
}

void receive::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 2 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1))) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_CS_iter0_fsm_state1.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
   (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || 
    esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || 
    (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
     esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || 
    (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
     esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || 
    (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
     esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1))))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op47_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op10_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(getState_load_reg_392.read(), ap_const_lv1_1) && 
    esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0)) || 
   (esl_seteq<1,1,1>(getPath2remux_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op60_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(filterPopGet_V_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op68_write_state2.read(), ap_const_boolean_1))))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

}

