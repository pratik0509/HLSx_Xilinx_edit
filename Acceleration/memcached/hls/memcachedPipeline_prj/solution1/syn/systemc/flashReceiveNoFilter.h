// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flashReceiveNoFilter_HH_
#define _flashReceiveNoFilter_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct flashReceiveNoFilter : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > flash_Disp2rec_V_V_dout;
    sc_in< sc_logic > flash_Disp2rec_V_V_empty_n;
    sc_out< sc_logic > flash_Disp2rec_V_V_read;
    sc_in< sc_logic > memRdData_V_V_TVALID;
    sc_out< sc_lv<64> > flashGetPath2remux_V_din;
    sc_in< sc_logic > flashGetPath2remux_V_full_n;
    sc_out< sc_logic > flashGetPath2remux_V_write;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<64> > memRdData_V_V_TDATA;
    sc_out< sc_logic > memRdData_V_V_TREADY;


    // Module declarations
    flashReceiveNoFilter(sc_module_name name);
    SC_HAS_PROCESS(flashReceiveNoFilter);

    ~flashReceiveNoFilter();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<2> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<1> > tmp_468_nbreadreq_fu_66_p3;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_74_p3;
    sc_signal< bool > ap_predicate_op9_read_state1;
    sc_signal< bool > ap_predicate_op15_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<1> > flashGetState_load_reg_202;
    sc_signal< sc_lv<1> > tmp_468_reg_206;
    sc_signal< sc_lv<1> > tmp_470_reg_210;
    sc_signal< bool > ap_predicate_op29_write_state2;
    sc_signal< sc_lv<1> > tmp_reg_214;
    sc_signal< bool > ap_predicate_op36_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state2;
    sc_signal< sc_lv<1> > flashGetState;
    sc_signal< sc_lv<16> > getValueLength_V;
    sc_signal< sc_lv<8> > getCounter_1;
    sc_signal< sc_logic > memRdData_V_V_TDATA_blk_n;
    sc_signal< sc_logic > flash_Disp2rec_V_V_blk_n;
    sc_signal< sc_logic > flashGetPath2remux_V_blk_n;
    sc_signal< sc_lv<64> > reg_101;
    sc_signal< sc_lv<1> > tmp_237_i_fu_168_p2;
    sc_signal< sc_lv<1> > tmp_237_i_reg_218;
    sc_signal< sc_lv<1> > tmp_237_i_reg_218_pp0_iter0_reg;
    sc_signal< sc_lv<16> > tmp_238_i_fu_114_p2;
    sc_signal< sc_lv<16> > storemerge_i_fu_154_p3;
    sc_signal< sc_lv<8> > tmp_239_i_fu_184_p2;
    sc_signal< sc_lv<13> > tmp_469_fu_132_p4;
    sc_signal< sc_lv<1> > icmp_fu_142_p2;
    sc_signal< sc_lv<16> > tmp_236_i_fu_148_p2;
    sc_signal< sc_lv<1> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter1_fsm;
    sc_signal< bool > ap_condition_162;
    sc_signal< bool > ap_condition_108;
    sc_signal< bool > ap_condition_171;
    sc_signal< bool > ap_condition_157;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_iter0_fsm_state1;
    static const sc_lv<2> ap_ST_iter1_fsm_state2;
    static const sc_lv<2> ap_ST_iter1_fsm_state0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<16> ap_const_lv16_FFF8;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state2();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_108();
    void thread_ap_condition_157();
    void thread_ap_condition_162();
    void thread_ap_condition_171();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op15_read_state1();
    void thread_ap_predicate_op29_write_state2();
    void thread_ap_predicate_op36_write_state2();
    void thread_ap_predicate_op9_read_state1();
    void thread_ap_ready();
    void thread_flashGetPath2remux_V_blk_n();
    void thread_flashGetPath2remux_V_din();
    void thread_flashGetPath2remux_V_write();
    void thread_flash_Disp2rec_V_V_blk_n();
    void thread_flash_Disp2rec_V_V_read();
    void thread_grp_nbreadreq_fu_74_p3();
    void thread_icmp_fu_142_p2();
    void thread_internal_ap_ready();
    void thread_memRdData_V_V_TDATA_blk_n();
    void thread_memRdData_V_V_TREADY();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_storemerge_i_fu_154_p3();
    void thread_tmp_236_i_fu_148_p2();
    void thread_tmp_237_i_fu_168_p2();
    void thread_tmp_237_i_reg_218_pp0_iter0_reg();
    void thread_tmp_238_i_fu_114_p2();
    void thread_tmp_239_i_fu_184_p2();
    void thread_tmp_468_nbreadreq_fu_66_p3();
    void thread_tmp_469_fu_132_p4();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
};

}

using namespace ap_rtl;

#endif
