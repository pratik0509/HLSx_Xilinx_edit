// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _receive_HH_
#define _receive_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct receive : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > disp2rec_V_V_dout;
    sc_in< sc_logic > disp2rec_V_V_empty_n;
    sc_out< sc_logic > disp2rec_V_V_read;
    sc_in< sc_logic > memRdData_V_V_TVALID;
    sc_out< sc_lv<64> > getPath2remux_V_V_din;
    sc_in< sc_logic > getPath2remux_V_V_full_n;
    sc_out< sc_logic > getPath2remux_V_V_write;
    sc_out< sc_lv<1> > filterPopGet_V_V_din;
    sc_in< sc_logic > filterPopGet_V_V_full_n;
    sc_out< sc_logic > filterPopGet_V_V_write;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<512> > memRdData_V_V_TDATA;
    sc_out< sc_logic > memRdData_V_V_TREADY;


    // Module declarations
    receive(sc_module_name name);
    SC_HAS_PROCESS(receive);

    ~receive();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<2> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<1> > tmp_nbreadreq_fu_90_p3;
    sc_signal< sc_lv<1> > tmp_132_nbreadreq_fu_98_p3;
    sc_signal< bool > ap_predicate_op10_read_state1;
    sc_signal< sc_lv<1> > tmp_96_i_fu_342_p2;
    sc_signal< sc_lv<1> > tmp_97_i_fu_348_p2;
    sc_signal< bool > ap_predicate_op47_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<1> > getState_load_reg_392;
    sc_signal< sc_lv<1> > tmp_reg_396;
    sc_signal< sc_lv<1> > tmp_132_reg_400;
    sc_signal< bool > ap_predicate_op60_write_state2;
    sc_signal< sc_lv<1> > tmp_96_i_reg_419;
    sc_signal< bool > ap_predicate_op68_write_state2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state2;
    sc_signal< sc_lv<1> > getState;
    sc_signal< sc_lv<12> > getValueLength_V_1;
    sc_signal< sc_lv<8> > getCounter;
    sc_signal< sc_lv<512> > memInputWord_V;
    sc_signal< sc_logic > memRdData_V_V_TDATA_blk_n;
    sc_signal< sc_logic > disp2rec_V_V_blk_n;
    sc_signal< sc_logic > getPath2remux_V_V_blk_n;
    sc_signal< sc_logic > filterPopGet_V_V_blk_n;
    sc_signal< sc_lv<64> > tmp_V_18_fu_164_p1;
    sc_signal< sc_lv<64> > tmp_V_18_reg_404;
    sc_signal< sc_lv<10> > tmp_124_fu_290_p2;
    sc_signal< sc_lv<10> > tmp_124_reg_409;
    sc_signal< sc_lv<512> > tmp_127_fu_300_p2;
    sc_signal< sc_lv<512> > tmp_127_reg_414;
    sc_signal< sc_lv<8> > ap_phi_mux_storemerge11_i_phi_fu_136_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_storemerge11_i_reg_133;
    sc_signal< sc_lv<8> > tmp_98_i_fu_354_p2;
    sc_signal< sc_lv<64> > tmp_V_fu_387_p1;
    sc_signal< sc_lv<12> > tmp_99_i_fu_168_p2;
    sc_signal< sc_lv<12> > storemerge_i_fu_328_p3;
    sc_signal< sc_lv<8> > tmp_100_i_fu_180_p2;
    sc_signal< sc_lv<14> > Lo_assign_fu_202_p3;
    sc_signal< sc_lv<14> > Hi_assign_fu_210_p2;
    sc_signal< sc_lv<4> > tmp_113_fu_198_p1;
    sc_signal< sc_lv<10> > tmp_115_fu_226_p3;
    sc_signal< sc_lv<10> > tmp_116_fu_234_p1;
    sc_signal< sc_lv<1> > tmp_114_fu_220_p2;
    sc_signal< sc_lv<10> > tmp_118_fu_248_p2;
    sc_signal< sc_lv<10> > tmp_120_fu_260_p2;
    sc_signal< sc_lv<512> > tmp_117_fu_238_p4;
    sc_signal< sc_lv<10> > tmp_119_fu_254_p2;
    sc_signal< sc_lv<10> > tmp_121_fu_266_p3;
    sc_signal< sc_lv<10> > tmp_123_fu_282_p3;
    sc_signal< sc_lv<512> > tmp_122_fu_274_p3;
    sc_signal< sc_lv<512> > tmp_125_fu_296_p1;
    sc_signal< sc_lv<9> > tmp_131_fu_306_p4;
    sc_signal< sc_lv<1> > icmp_fu_316_p2;
    sc_signal< sc_lv<12> > tmp_95_i_fu_322_p2;
    sc_signal< sc_lv<512> > tmp_126_fu_373_p1;
    sc_signal< sc_lv<512> > tmp_128_fu_376_p2;
    sc_signal< sc_lv<512> > p_Result_s_fu_382_p2;
    sc_signal< sc_lv<1> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter1_fsm;
    sc_signal< bool > ap_condition_120;
    sc_signal< bool > ap_condition_192;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_iter0_fsm_state1;
    static const sc_lv<2> ap_ST_iter1_fsm_state2;
    static const sc_lv<2> ap_ST_iter1_fsm_state0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<12> ap_const_lv12_FF8;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<14> ap_const_lv14_3F;
    static const sc_lv<32> ap_const_lv32_1FF;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<512> ap_const_lv512_lc_3;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Hi_assign_fu_210_p2();
    void thread_Lo_assign_fu_202_p3();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state2();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_condition_120();
    void thread_ap_condition_192();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_storemerge11_i_phi_fu_136_p6();
    void thread_ap_phi_reg_pp0_iter0_storemerge11_i_reg_133();
    void thread_ap_predicate_op10_read_state1();
    void thread_ap_predicate_op47_read_state1();
    void thread_ap_predicate_op60_write_state2();
    void thread_ap_predicate_op68_write_state2();
    void thread_ap_ready();
    void thread_disp2rec_V_V_blk_n();
    void thread_disp2rec_V_V_read();
    void thread_filterPopGet_V_V_blk_n();
    void thread_filterPopGet_V_V_din();
    void thread_filterPopGet_V_V_write();
    void thread_getPath2remux_V_V_blk_n();
    void thread_getPath2remux_V_V_din();
    void thread_getPath2remux_V_V_write();
    void thread_icmp_fu_316_p2();
    void thread_internal_ap_ready();
    void thread_memRdData_V_V_TDATA_blk_n();
    void thread_memRdData_V_V_TREADY();
    void thread_p_Result_s_fu_382_p2();
    void thread_real_start();
    void thread_start_out();
    void thread_start_write();
    void thread_storemerge_i_fu_328_p3();
    void thread_tmp_100_i_fu_180_p2();
    void thread_tmp_113_fu_198_p1();
    void thread_tmp_114_fu_220_p2();
    void thread_tmp_115_fu_226_p3();
    void thread_tmp_116_fu_234_p1();
    void thread_tmp_117_fu_238_p4();
    void thread_tmp_118_fu_248_p2();
    void thread_tmp_119_fu_254_p2();
    void thread_tmp_120_fu_260_p2();
    void thread_tmp_121_fu_266_p3();
    void thread_tmp_122_fu_274_p3();
    void thread_tmp_123_fu_282_p3();
    void thread_tmp_124_fu_290_p2();
    void thread_tmp_125_fu_296_p1();
    void thread_tmp_126_fu_373_p1();
    void thread_tmp_127_fu_300_p2();
    void thread_tmp_128_fu_376_p2();
    void thread_tmp_131_fu_306_p4();
    void thread_tmp_132_nbreadreq_fu_98_p3();
    void thread_tmp_95_i_fu_322_p2();
    void thread_tmp_96_i_fu_342_p2();
    void thread_tmp_97_i_fu_348_p2();
    void thread_tmp_98_i_fu_354_p2();
    void thread_tmp_99_i_fu_168_p2();
    void thread_tmp_V_18_fu_164_p1();
    void thread_tmp_V_fu_387_p1();
    void thread_tmp_nbreadreq_fu_90_p3();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
};

}

using namespace ap_rtl;

#endif
