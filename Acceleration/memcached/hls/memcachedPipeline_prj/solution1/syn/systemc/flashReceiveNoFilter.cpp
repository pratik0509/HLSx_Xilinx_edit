// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "flashReceiveNoFilter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic flashReceiveNoFilter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic flashReceiveNoFilter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> flashReceiveNoFilter::ap_ST_iter0_fsm_state1 = "1";
const sc_lv<2> flashReceiveNoFilter::ap_ST_iter1_fsm_state2 = "10";
const sc_lv<2> flashReceiveNoFilter::ap_ST_iter1_fsm_state0 = "1";
const bool flashReceiveNoFilter::ap_const_boolean_1 = true;
const sc_lv<32> flashReceiveNoFilter::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> flashReceiveNoFilter::ap_const_lv1_0 = "0";
const sc_lv<1> flashReceiveNoFilter::ap_const_lv1_1 = "1";
const sc_lv<32> flashReceiveNoFilter::ap_const_lv32_1 = "1";
const sc_lv<16> flashReceiveNoFilter::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> flashReceiveNoFilter::ap_const_lv8_0 = "00000000";
const sc_lv<16> flashReceiveNoFilter::ap_const_lv16_FFF8 = "1111111111111000";
const sc_lv<32> flashReceiveNoFilter::ap_const_lv32_3 = "11";
const sc_lv<32> flashReceiveNoFilter::ap_const_lv32_F = "1111";
const sc_lv<13> flashReceiveNoFilter::ap_const_lv13_0 = "0000000000000";
const sc_lv<8> flashReceiveNoFilter::ap_const_lv8_1 = "1";
const sc_lv<64> flashReceiveNoFilter::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";

flashReceiveNoFilter::flashReceiveNoFilter(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_iter0_fsm_state1);
    sensitive << ( ap_CS_iter0_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state0);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_CS_iter1_fsm_state2);
    sensitive << ( ap_CS_iter1_fsm );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );

    SC_METHOD(thread_ap_condition_108);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_condition_157);
    sensitive << ( ap_done_reg );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_condition_162);
    sensitive << ( grp_nbreadreq_fu_74_p3 );
    sensitive << ( flashGetState );
    sensitive << ( tmp_237_i_fu_168_p2 );

    SC_METHOD(thread_ap_condition_171);
    sensitive << ( flashGetState_load_reg_202 );
    sensitive << ( tmp_reg_214 );
    sensitive << ( tmp_237_i_reg_218_pp0_iter0_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm_state0 );

    SC_METHOD(thread_ap_predicate_op15_read_state1);
    sensitive << ( grp_nbreadreq_fu_74_p3 );
    sensitive << ( flashGetState );

    SC_METHOD(thread_ap_predicate_op29_write_state2);
    sensitive << ( flashGetState_load_reg_202 );
    sensitive << ( tmp_468_reg_206 );
    sensitive << ( tmp_470_reg_210 );

    SC_METHOD(thread_ap_predicate_op36_write_state2);
    sensitive << ( flashGetState_load_reg_202 );
    sensitive << ( tmp_reg_214 );

    SC_METHOD(thread_ap_predicate_op9_read_state1);
    sensitive << ( tmp_468_nbreadreq_fu_66_p3 );
    sensitive << ( grp_nbreadreq_fu_74_p3 );
    sensitive << ( flashGetState );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_flashGetPath2remux_V_blk_n);
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_flashGetPath2remux_V_din);
    sensitive << ( ap_done_reg );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( reg_101 );

    SC_METHOD(thread_flashGetPath2remux_V_write);
    sensitive << ( ap_done_reg );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_flash_Disp2rec_V_V_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );

    SC_METHOD(thread_flash_Disp2rec_V_V_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_grp_nbreadreq_fu_74_p3);
    sensitive << ( memRdData_V_V_TVALID );

    SC_METHOD(thread_icmp_fu_142_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( tmp_469_fu_132_p4 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_memRdData_V_V_TDATA_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );

    SC_METHOD(thread_memRdData_V_V_TREADY);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_storemerge_i_fu_154_p3);
    sensitive << ( icmp_fu_142_p2 );
    sensitive << ( tmp_236_i_fu_148_p2 );

    SC_METHOD(thread_tmp_236_i_fu_148_p2);
    sensitive << ( getValueLength_V );

    SC_METHOD(thread_tmp_237_i_fu_168_p2);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );
    sensitive << ( storemerge_i_fu_154_p3 );

    SC_METHOD(thread_tmp_237_i_reg_218_pp0_iter0_reg);
    sensitive << ( tmp_237_i_reg_218 );

    SC_METHOD(thread_tmp_238_i_fu_114_p2);
    sensitive << ( flash_Disp2rec_V_V_dout );

    SC_METHOD(thread_tmp_239_i_fu_184_p2);
    sensitive << ( getCounter_1 );

    SC_METHOD(thread_tmp_468_nbreadreq_fu_66_p3);
    sensitive << ( flash_Disp2rec_V_V_empty_n );

    SC_METHOD(thread_tmp_469_fu_132_p4);
    sensitive << ( getValueLength_V );

    SC_METHOD(thread_ap_NS_iter0_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    SC_METHOD(thread_ap_NS_iter1_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_iter0_fsm_state1 );
    sensitive << ( ap_CS_iter1_fsm );
    sensitive << ( flash_Disp2rec_V_V_empty_n );
    sensitive << ( ap_predicate_op9_read_state1 );
    sensitive << ( memRdData_V_V_TVALID );
    sensitive << ( ap_predicate_op15_read_state1 );
    sensitive << ( flashGetPath2remux_V_full_n );
    sensitive << ( ap_predicate_op29_write_state2 );
    sensitive << ( ap_predicate_op36_write_state2 );
    sensitive << ( ap_CS_iter1_fsm_state2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_iter0_fsm = "1";
    ap_CS_iter1_fsm = "01";
    flashGetState_load_reg_202 = "0";
    tmp_468_reg_206 = "0";
    tmp_470_reg_210 = "0";
    tmp_reg_214 = "0";
    flashGetState = "0";
    getValueLength_V = "0000000000000000";
    getCounter_1 = "00000000";
    reg_101 = "0000000000000000000000000000000000000000000000000000000000000000";
    tmp_237_i_reg_218 = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "flashReceiveNoFilter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flash_Disp2rec_V_V_dout, "(port)flash_Disp2rec_V_V_dout");
    sc_trace(mVcdFile, flash_Disp2rec_V_V_empty_n, "(port)flash_Disp2rec_V_V_empty_n");
    sc_trace(mVcdFile, flash_Disp2rec_V_V_read, "(port)flash_Disp2rec_V_V_read");
    sc_trace(mVcdFile, memRdData_V_V_TVALID, "(port)memRdData_V_V_TVALID");
    sc_trace(mVcdFile, flashGetPath2remux_V_din, "(port)flashGetPath2remux_V_din");
    sc_trace(mVcdFile, flashGetPath2remux_V_full_n, "(port)flashGetPath2remux_V_full_n");
    sc_trace(mVcdFile, flashGetPath2remux_V_write, "(port)flashGetPath2remux_V_write");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, memRdData_V_V_TDATA, "(port)memRdData_V_V_TDATA");
    sc_trace(mVcdFile, memRdData_V_V_TREADY, "(port)memRdData_V_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_iter0_fsm, "ap_CS_iter0_fsm");
    sc_trace(mVcdFile, ap_CS_iter0_fsm_state1, "ap_CS_iter0_fsm_state1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm, "ap_CS_iter1_fsm");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state0, "ap_CS_iter1_fsm_state0");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, tmp_468_nbreadreq_fu_66_p3, "tmp_468_nbreadreq_fu_66_p3");
    sc_trace(mVcdFile, grp_nbreadreq_fu_74_p3, "grp_nbreadreq_fu_74_p3");
    sc_trace(mVcdFile, ap_predicate_op9_read_state1, "ap_predicate_op9_read_state1");
    sc_trace(mVcdFile, ap_predicate_op15_read_state1, "ap_predicate_op15_read_state1");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, flashGetState_load_reg_202, "flashGetState_load_reg_202");
    sc_trace(mVcdFile, tmp_468_reg_206, "tmp_468_reg_206");
    sc_trace(mVcdFile, tmp_470_reg_210, "tmp_470_reg_210");
    sc_trace(mVcdFile, ap_predicate_op29_write_state2, "ap_predicate_op29_write_state2");
    sc_trace(mVcdFile, tmp_reg_214, "tmp_reg_214");
    sc_trace(mVcdFile, ap_predicate_op36_write_state2, "ap_predicate_op36_write_state2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_CS_iter1_fsm_state2, "ap_CS_iter1_fsm_state2");
    sc_trace(mVcdFile, flashGetState, "flashGetState");
    sc_trace(mVcdFile, getValueLength_V, "getValueLength_V");
    sc_trace(mVcdFile, getCounter_1, "getCounter_1");
    sc_trace(mVcdFile, memRdData_V_V_TDATA_blk_n, "memRdData_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, flash_Disp2rec_V_V_blk_n, "flash_Disp2rec_V_V_blk_n");
    sc_trace(mVcdFile, flashGetPath2remux_V_blk_n, "flashGetPath2remux_V_blk_n");
    sc_trace(mVcdFile, reg_101, "reg_101");
    sc_trace(mVcdFile, tmp_237_i_fu_168_p2, "tmp_237_i_fu_168_p2");
    sc_trace(mVcdFile, tmp_237_i_reg_218, "tmp_237_i_reg_218");
    sc_trace(mVcdFile, tmp_237_i_reg_218_pp0_iter0_reg, "tmp_237_i_reg_218_pp0_iter0_reg");
    sc_trace(mVcdFile, tmp_238_i_fu_114_p2, "tmp_238_i_fu_114_p2");
    sc_trace(mVcdFile, storemerge_i_fu_154_p3, "storemerge_i_fu_154_p3");
    sc_trace(mVcdFile, tmp_239_i_fu_184_p2, "tmp_239_i_fu_184_p2");
    sc_trace(mVcdFile, tmp_469_fu_132_p4, "tmp_469_fu_132_p4");
    sc_trace(mVcdFile, icmp_fu_142_p2, "icmp_fu_142_p2");
    sc_trace(mVcdFile, tmp_236_i_fu_148_p2, "tmp_236_i_fu_148_p2");
    sc_trace(mVcdFile, ap_NS_iter0_fsm, "ap_NS_iter0_fsm");
    sc_trace(mVcdFile, ap_NS_iter1_fsm, "ap_NS_iter1_fsm");
    sc_trace(mVcdFile, ap_condition_162, "ap_condition_162");
    sc_trace(mVcdFile, ap_condition_108, "ap_condition_108");
    sc_trace(mVcdFile, ap_condition_171, "ap_condition_171");
    sc_trace(mVcdFile, ap_condition_157, "ap_condition_157");
#endif

    }
}

flashReceiveNoFilter::~flashReceiveNoFilter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void flashReceiveNoFilter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_iter0_fsm = ap_ST_iter0_fsm_state1;
    } else {
        ap_CS_iter0_fsm = ap_NS_iter0_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_iter1_fsm = ap_ST_iter1_fsm_state0;
    } else {
        ap_CS_iter1_fsm = ap_NS_iter1_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1))))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        flashGetState = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_108.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_condition_162.read(), ap_const_boolean_1)) {
                flashGetState = ap_const_lv1_0;
            } else if (esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) {
                flashGetState = ap_const_lv1_1;
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        flashGetState_load_reg_202 = ap_const_lv1_0;
    } else {
        if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
            flashGetState_load_reg_202 = flashGetState.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        getCounter_1 = ap_const_lv8_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_157.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_condition_171.read(), ap_const_boolean_1)) {
                getCounter_1 = ap_const_lv8_0;
            } else if (esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)) {
                getCounter_1 = tmp_239_i_fu_184_p2.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        getValueLength_V = ap_const_lv16_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_108.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) {
                getValueLength_V = storemerge_i_fu_154_p3.read();
            } else if (esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) {
                getValueLength_V = tmp_238_i_fu_114_p2.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        reg_101 = ap_const_lv64_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1) && 
              !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)))) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1) && 
              !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)))))) {
            reg_101 = memRdData_V_V_TDATA.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_237_i_reg_218 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))))) {
            tmp_237_i_reg_218 = tmp_237_i_fu_168_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_468_reg_206 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(flashGetState.read(), ap_const_lv1_0) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))))) {
            tmp_468_reg_206 =  (sc_lv<1>) (flash_Disp2rec_V_V_empty_n.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_470_reg_210 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(flashGetState.read(), ap_const_lv1_0) && 
             esl_seteq<1,1,1>(tmp_468_nbreadreq_fu_66_p3.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))))) {
            tmp_470_reg_210 =  (sc_lv<1>) (memRdData_V_V_TVALID.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        tmp_reg_214 = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
             esl_seteq<1,1,1>(flashGetState.read(), ap_const_lv1_1) && 
             !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))))) {
            tmp_reg_214 =  (sc_lv<1>) (memRdData_V_V_TVALID.read());
        }
    }
}

void flashReceiveNoFilter::thread_ap_CS_iter0_fsm_state1() {
    ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm.read()[0];
}

void flashReceiveNoFilter::thread_ap_CS_iter1_fsm_state0() {
    ap_CS_iter1_fsm_state0 = ap_CS_iter1_fsm.read()[0];
}

void flashReceiveNoFilter::thread_ap_CS_iter1_fsm_state2() {
    ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm.read()[1];
}

void flashReceiveNoFilter::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)));
}

void flashReceiveNoFilter::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)));
}

void flashReceiveNoFilter::thread_ap_condition_108() {
    ap_condition_108 = (!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()));
}

void flashReceiveNoFilter::thread_ap_condition_157() {
    ap_condition_157 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1))));
}

void flashReceiveNoFilter::thread_ap_condition_162() {
    ap_condition_162 = (esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_74_p3.read()) && esl_seteq<1,1,1>(flashGetState.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_237_i_fu_168_p2.read()));
}

void flashReceiveNoFilter::thread_ap_condition_171() {
    ap_condition_171 = (esl_seteq<1,1,1>(ap_const_lv1_1, flashGetState_load_reg_202.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_214.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_237_i_reg_218_pp0_iter0_reg.read()));
}

void flashReceiveNoFilter::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void flashReceiveNoFilter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void flashReceiveNoFilter::thread_ap_predicate_op15_read_state1() {
    ap_predicate_op15_read_state1 = (esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_74_p3.read()) && esl_seteq<1,1,1>(flashGetState.read(), ap_const_lv1_1));
}

void flashReceiveNoFilter::thread_ap_predicate_op29_write_state2() {
    ap_predicate_op29_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, flashGetState_load_reg_202.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_468_reg_206.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_470_reg_210.read()));
}

void flashReceiveNoFilter::thread_ap_predicate_op36_write_state2() {
    ap_predicate_op36_write_state2 = (esl_seteq<1,1,1>(ap_const_lv1_1, flashGetState_load_reg_202.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_214.read()));
}

void flashReceiveNoFilter::thread_ap_predicate_op9_read_state1() {
    ap_predicate_op9_read_state1 = (esl_seteq<1,1,1>(flashGetState.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_468_nbreadreq_fu_66_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, grp_nbreadreq_fu_74_p3.read()));
}

void flashReceiveNoFilter::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void flashReceiveNoFilter::thread_flashGetPath2remux_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read())))) {
        flashGetPath2remux_V_blk_n = flashGetPath2remux_V_full_n.read();
    } else {
        flashGetPath2remux_V_blk_n = ap_const_logic_1;
    }
}

void flashReceiveNoFilter::thread_flashGetPath2remux_V_din() {
    flashGetPath2remux_V_din = reg_101.read();
}

void flashReceiveNoFilter::thread_flashGetPath2remux_V_write() {
    if (((esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))))) {
        flashGetPath2remux_V_write = ap_const_logic_1;
    } else {
        flashGetPath2remux_V_write = ap_const_logic_0;
    }
}

void flashReceiveNoFilter::thread_flash_Disp2rec_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
         !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        flash_Disp2rec_V_V_blk_n = flash_Disp2rec_V_V_empty_n.read();
    } else {
        flash_Disp2rec_V_V_blk_n = ap_const_logic_1;
    }
}

void flashReceiveNoFilter::thread_flash_Disp2rec_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1) && 
         !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))))) {
        flash_Disp2rec_V_V_read = ap_const_logic_1;
    } else {
        flash_Disp2rec_V_V_read = ap_const_logic_0;
    }
}

void flashReceiveNoFilter::thread_grp_nbreadreq_fu_74_p3() {
    grp_nbreadreq_fu_74_p3 =  (sc_lv<1>) (memRdData_V_V_TVALID.read());
}

void flashReceiveNoFilter::thread_icmp_fu_142_p2() {
    icmp_fu_142_p2 = (!tmp_469_fu_132_p4.read().is_01() || !ap_const_lv13_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_469_fu_132_p4.read() != ap_const_lv13_0);
}

void flashReceiveNoFilter::thread_internal_ap_ready() {
    if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void flashReceiveNoFilter::thread_memRdData_V_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))))) {
        memRdData_V_V_TDATA_blk_n = memRdData_V_V_TVALID.read();
    } else {
        memRdData_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void flashReceiveNoFilter::thread_memRdData_V_V_TREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1) && 
          !(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)))))) {
        memRdData_V_V_TREADY = ap_const_logic_1;
    } else {
        memRdData_V_V_TREADY = ap_const_logic_0;
    }
}

void flashReceiveNoFilter::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void flashReceiveNoFilter::thread_start_out() {
    start_out = real_start.read();
}

void flashReceiveNoFilter::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void flashReceiveNoFilter::thread_storemerge_i_fu_154_p3() {
    storemerge_i_fu_154_p3 = (!icmp_fu_142_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_fu_142_p2.read()[0].to_bool())? tmp_236_i_fu_148_p2.read(): ap_const_lv16_0);
}

void flashReceiveNoFilter::thread_tmp_236_i_fu_148_p2() {
    tmp_236_i_fu_148_p2 = (!getValueLength_V.read().is_01() || !ap_const_lv16_FFF8.is_01())? sc_lv<16>(): (sc_biguint<16>(getValueLength_V.read()) + sc_bigint<16>(ap_const_lv16_FFF8));
}

void flashReceiveNoFilter::thread_tmp_237_i_fu_168_p2() {
    tmp_237_i_fu_168_p2 = (!storemerge_i_fu_154_p3.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(storemerge_i_fu_154_p3.read() == ap_const_lv16_0);
}

void flashReceiveNoFilter::thread_tmp_237_i_reg_218_pp0_iter0_reg() {
    tmp_237_i_reg_218_pp0_iter0_reg = tmp_237_i_reg_218.read();
}

void flashReceiveNoFilter::thread_tmp_238_i_fu_114_p2() {
    tmp_238_i_fu_114_p2 = (!flash_Disp2rec_V_V_dout.read().is_01() || !ap_const_lv16_FFF8.is_01())? sc_lv<16>(): (sc_biguint<16>(flash_Disp2rec_V_V_dout.read()) + sc_bigint<16>(ap_const_lv16_FFF8));
}

void flashReceiveNoFilter::thread_tmp_239_i_fu_184_p2() {
    tmp_239_i_fu_184_p2 = (!getCounter_1.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(getCounter_1.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void flashReceiveNoFilter::thread_tmp_468_nbreadreq_fu_66_p3() {
    tmp_468_nbreadreq_fu_66_p3 =  (sc_lv<1>) (flash_Disp2rec_V_V_empty_n.read());
}

void flashReceiveNoFilter::thread_tmp_469_fu_132_p4() {
    tmp_469_fu_132_p4 = getValueLength_V.read().range(15, 3);
}

void flashReceiveNoFilter::thread_ap_NS_iter0_fsm() {
    switch (ap_CS_iter0_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
break;
        default : 
            ap_NS_iter0_fsm = "X";
            break;
    }
}

void flashReceiveNoFilter::thread_ap_NS_iter1_fsm() {
    switch (ap_CS_iter1_fsm.read().to_uint64()) {
        case 2 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))) && !(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else if ((!(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1))) && (esl_seteq<1,1,1>(ap_const_logic_0, ap_CS_iter0_fsm_state1.read()) || 
  (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()) && 
   (esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || 
    esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || 
    (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
     esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || 
    (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
     esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || 
    (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
     esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))))))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            }
            break;
        case 1 : 
            if ((!(esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter1_fsm_state2.read()) && 
  ((esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op36_write_state2.read(), ap_const_boolean_1)) || 
   (esl_seteq<1,1,1>(flashGetPath2remux_V_full_n.read(), ap_const_logic_0) && 
    esl_seteq<1,1,1>(ap_predicate_op29_write_state2.read(), ap_const_boolean_1)))) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op15_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(memRdData_V_V_TVALID.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1)) || (esl_seteq<1,1,1>(flash_Disp2rec_V_V_empty_n.read(), ap_const_logic_0) && 
  esl_seteq<1,1,1>(ap_predicate_op9_read_state1.read(), ap_const_boolean_1))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_iter0_fsm_state1.read()))) {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            } else {
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            }
            break;
        default : 
            ap_NS_iter1_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

}

