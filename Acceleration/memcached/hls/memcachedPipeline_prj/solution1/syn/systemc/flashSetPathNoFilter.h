// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flashSetPathNoFilter_HH_
#define _flashSetPathNoFilter_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct flashSetPathNoFilter : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<48> > flashDemux2setPathMe_1_dout;
    sc_in< sc_logic > flashDemux2setPathMe_1_empty_n;
    sc_out< sc_logic > flashDemux2setPathMe_1_read;
    sc_in< sc_lv<66> > flashDemux2setPathVa_1_dout;
    sc_in< sc_logic > flashDemux2setPathVa_1_empty_n;
    sc_out< sc_logic > flashDemux2setPathVa_1_read;
    sc_in< sc_logic > memWrCmd_V_TREADY;
    sc_in< sc_logic > memWrData_V_V_TREADY;
    sc_out< sc_lv<48> > memWrCmd_V_TDATA;
    sc_out< sc_logic > memWrCmd_V_TVALID;
    sc_out< sc_lv<64> > memWrData_V_V_TDATA;
    sc_out< sc_logic > memWrData_V_V_TVALID;


    // Module declarations
    flashSetPathNoFilter(sc_module_name name);
    SC_HAS_PROCESS(flashSetPathNoFilter);

    ~flashSetPathNoFilter();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<2> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_lv<2> > ap_CS_iter2_fsm;
    sc_signal< sc_logic > ap_CS_iter2_fsm_state0;
    sc_signal< sc_lv<1> > tmp_445_nbreadreq_fu_76_p3;
    sc_signal< sc_lv<1> > grp_nbreadreq_fu_84_p3;
    sc_signal< bool > ap_predicate_op9_read_state1;
    sc_signal< bool > ap_predicate_op23_read_state1;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< sc_logic > memWrCmd_V_1_ack_in;
    sc_signal< sc_lv<1> > flashSetState_load_reg_221;
    sc_signal< sc_lv<1> > tmp_445_reg_225;
    sc_signal< sc_lv<1> > tmp_448_reg_229;
    sc_signal< sc_lv<1> > tmp_451_reg_248;
    sc_signal< bool > ap_predicate_op31_write_state2;
    sc_signal< sc_logic > memWrData_V_V_1_ack_in;
    sc_signal< sc_lv<1> > tmp_reg_252;
    sc_signal< bool > ap_predicate_op34_write_state2;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< sc_lv<1> > flashSetState_load_reg_221_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_445_reg_225_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_448_reg_229_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_451_reg_248_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op41_write_state3;
    sc_signal< sc_lv<1> > tmp_reg_252_pp0_iter1_reg;
    sc_signal< bool > ap_predicate_op46_write_state3;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< sc_logic > ap_CS_iter2_fsm_state3;
    sc_signal< sc_lv<48> > memWrCmd_V_1_data_out;
    sc_signal< sc_logic > memWrCmd_V_1_vld_in;
    sc_signal< sc_logic > memWrCmd_V_1_vld_out;
    sc_signal< sc_logic > memWrCmd_V_1_ack_out;
    sc_signal< sc_lv<48> > memWrCmd_V_1_payload_A;
    sc_signal< sc_lv<48> > memWrCmd_V_1_payload_B;
    sc_signal< sc_logic > memWrCmd_V_1_sel_rd;
    sc_signal< sc_logic > memWrCmd_V_1_sel_wr;
    sc_signal< sc_logic > memWrCmd_V_1_sel;
    sc_signal< sc_logic > memWrCmd_V_1_load_A;
    sc_signal< sc_logic > memWrCmd_V_1_load_B;
    sc_signal< sc_lv<2> > memWrCmd_V_1_state;
    sc_signal< sc_logic > memWrCmd_V_1_state_cmp_full;
    sc_signal< sc_lv<64> > memWrData_V_V_1_data_in;
    sc_signal< sc_lv<64> > memWrData_V_V_1_data_out;
    sc_signal< sc_logic > memWrData_V_V_1_vld_in;
    sc_signal< sc_logic > memWrData_V_V_1_vld_out;
    sc_signal< sc_logic > memWrData_V_V_1_ack_out;
    sc_signal< sc_lv<64> > memWrData_V_V_1_payload_A;
    sc_signal< sc_lv<64> > memWrData_V_V_1_payload_B;
    sc_signal< sc_logic > memWrData_V_V_1_sel_rd;
    sc_signal< sc_logic > memWrData_V_V_1_sel_wr;
    sc_signal< sc_logic > memWrData_V_V_1_sel;
    sc_signal< sc_logic > memWrData_V_V_1_load_A;
    sc_signal< sc_logic > memWrData_V_V_1_load_B;
    sc_signal< sc_lv<2> > memWrData_V_V_1_state;
    sc_signal< sc_logic > memWrData_V_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > flashSetState;
    sc_signal< sc_logic > memWrCmd_V_TDATA_blk_n;
    sc_signal< sc_logic > memWrData_V_V_TDATA_blk_n;
    sc_signal< sc_logic > flashDemux2setPathMe_1_blk_n;
    sc_signal< sc_logic > flashDemux2setPathVa_1_blk_n;
    sc_signal< sc_lv<32> > setCtrlWord_address_s_fu_122_p1;
    sc_signal< sc_lv<32> > setCtrlWord_address_s_reg_233;
    sc_signal< sc_lv<13> > setCtrlWord_count_V_fu_166_p3;
    sc_signal< sc_lv<13> > setCtrlWord_count_V_reg_238;
    sc_signal< sc_lv<64> > tmp_V_54_fu_174_p1;
    sc_signal< sc_lv<64> > tmp_V_54_reg_243;
    sc_signal< sc_lv<1> > tmp_451_fu_178_p3;
    sc_signal< sc_lv<64> > tmp_V_fu_192_p1;
    sc_signal< sc_lv<64> > tmp_V_reg_256;
    sc_signal< sc_lv<1> > tmp_447_fu_196_p3;
    sc_signal< sc_lv<48> > tmp_2_cast_fu_216_p1;
    sc_signal< sc_lv<13> > tmp_s_fu_136_p4;
    sc_signal< sc_lv<16> > tmp_length_V_load_ne_fu_126_p4;
    sc_signal< sc_lv<16> > op2_assign_fu_146_p3;
    sc_signal< sc_lv<1> > tmp_197_i_fu_154_p2;
    sc_signal< sc_lv<13> > tmp_68_i_fu_160_p2;
    sc_signal< sc_lv<45> > tmp_2_fu_210_p3;
    sc_signal< sc_lv<1> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter1_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter2_fsm;
    sc_signal< bool > ap_condition_473;
    sc_signal< bool > ap_condition_472;
    sc_signal< bool > ap_condition_353;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_iter0_fsm_state1;
    static const sc_lv<2> ap_ST_iter1_fsm_state2;
    static const sc_lv<2> ap_ST_iter2_fsm_state3;
    static const sc_lv<2> ap_ST_iter1_fsm_state0;
    static const sc_lv<2> ap_ST_iter2_fsm_state0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_41;
    static const bool ap_const_boolean_0;
    static const sc_lv<48> ap_const_lv48_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<13> ap_const_lv13_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state2();
    void thread_ap_CS_iter2_fsm_state0();
    void thread_ap_CS_iter2_fsm_state3();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_io();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_condition_353();
    void thread_ap_condition_472();
    void thread_ap_condition_473();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op23_read_state1();
    void thread_ap_predicate_op31_write_state2();
    void thread_ap_predicate_op34_write_state2();
    void thread_ap_predicate_op41_write_state3();
    void thread_ap_predicate_op46_write_state3();
    void thread_ap_predicate_op9_read_state1();
    void thread_ap_ready();
    void thread_flashDemux2setPathMe_1_blk_n();
    void thread_flashDemux2setPathMe_1_read();
    void thread_flashDemux2setPathVa_1_blk_n();
    void thread_flashDemux2setPathVa_1_read();
    void thread_grp_nbreadreq_fu_84_p3();
    void thread_memWrCmd_V_1_ack_in();
    void thread_memWrCmd_V_1_ack_out();
    void thread_memWrCmd_V_1_data_out();
    void thread_memWrCmd_V_1_load_A();
    void thread_memWrCmd_V_1_load_B();
    void thread_memWrCmd_V_1_sel();
    void thread_memWrCmd_V_1_state_cmp_full();
    void thread_memWrCmd_V_1_vld_in();
    void thread_memWrCmd_V_1_vld_out();
    void thread_memWrCmd_V_TDATA();
    void thread_memWrCmd_V_TDATA_blk_n();
    void thread_memWrCmd_V_TVALID();
    void thread_memWrData_V_V_1_ack_in();
    void thread_memWrData_V_V_1_ack_out();
    void thread_memWrData_V_V_1_data_in();
    void thread_memWrData_V_V_1_data_out();
    void thread_memWrData_V_V_1_load_A();
    void thread_memWrData_V_V_1_load_B();
    void thread_memWrData_V_V_1_sel();
    void thread_memWrData_V_V_1_state_cmp_full();
    void thread_memWrData_V_V_1_vld_in();
    void thread_memWrData_V_V_1_vld_out();
    void thread_memWrData_V_V_TDATA();
    void thread_memWrData_V_V_TDATA_blk_n();
    void thread_memWrData_V_V_TVALID();
    void thread_op2_assign_fu_146_p3();
    void thread_setCtrlWord_address_s_fu_122_p1();
    void thread_setCtrlWord_count_V_fu_166_p3();
    void thread_tmp_197_i_fu_154_p2();
    void thread_tmp_2_cast_fu_216_p1();
    void thread_tmp_2_fu_210_p3();
    void thread_tmp_445_nbreadreq_fu_76_p3();
    void thread_tmp_447_fu_196_p3();
    void thread_tmp_451_fu_178_p3();
    void thread_tmp_68_i_fu_160_p2();
    void thread_tmp_V_54_fu_174_p1();
    void thread_tmp_V_fu_192_p1();
    void thread_tmp_length_V_load_ne_fu_126_p4();
    void thread_tmp_s_fu_136_p4();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
    void thread_ap_NS_iter2_fsm();
};

}

using namespace ap_rtl;

#endif
